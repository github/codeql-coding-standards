//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import {{ ql_language }}
import codingstandards.{{ ql_language }}.exclusions.RuleMetadata
//** Import packages for this language **/
{% for package in packages %}
import {{ package }}
{% endfor %}

/** The TQuery type representing this language * */
{% if packages | length == 1 %}
newtype T{{ language_name.upper() }}Query = T{{ packages[0] }}PackageQuery({{ packages[0] }}Query q)
{% else %}
newtype T{{ language_name.upper() }}Query =
  {% for package in packages %}
  T{{ package }}PackageQuery({{ package }}Query q){% if not loop.last %} or
{% endif %}{% endfor %}

{% endif %}

/** The metadata predicate * */
predicate isQueryMetadata(Query query, string queryId, string ruleId) {
  {% for package in packages %}
  is{{ package }}QueryMetadata(query, queryId, ruleId){% if not loop.last %} or
  {% endif %}{% endfor %}

}

