/**
 * Provides a library which includes a `problems` predicate for reporting....
 */

import cpp
import codingstandards.{{ ql_language_name }}.Customizations
import codingstandards.{{ ql_language_name }}.Exclusions

abstract class {{shared_implementation_short_name}}SharedQuery extends Query { }

Query getQuery() { result instanceof {{shared_implementation_short_name}}SharedQuery }

query predicate problems(Element e, string message) {
not isExcluded(e, getQuery()) and message = "<replace with problem alert message for >"
}
