<!DOCTYPE qhelp SYSTEM "qhelp.dtd">
<qhelp>
 <section title="Description">
  <p>According to the C Standard, 7.21.3, paragraph 6 [<a href="https://wiki.sei.cmu.edu/confluence/display/c/AA.+Bibliography#AA.Bibliography-ISO-IEC9899-2011">ISO/IEC 9899:2011</a>],</p>
  <blockquote>
   <p>The address of the <code>FILE</code> object used to control a stream may be significant; a copy of a <code>FILE</code> object need not serve in place of the original.</p>
  </blockquote>
  <p>Consequently, do not copy a <code>FILE</code> object.</p>
 </section>
 <section title="Noncompliant Code Example">
  <p>This noncompliant code example can fail because a by-value copy of <code>stdout</code> is being used in the call to <code>fputs()</code>:</p>
  <sample language="cpp">#include &lt;stdio.h&gt;
 
int main(void) {
  FILE my_stdout = *stdout;
  if (fputs("Hello, World!\n", &amp;my_stdout) == EOF) {
    /* Handle error */
  }
  return 0;
}
</sample>
  <p>When compiled under Microsoft Visual Studio 2013 and run on Windows, this noncompliant example results in an "access violation" at runtime.</p>
 </section>
 <section title="Compliant Solution">
  <p>In this compliant solution, a copy of the <code>stdout</code> pointer to the <code>FILE</code> object is used in the call to <code>fputs()</code>:</p>
  <sample language="cpp">#include &lt;stdio.h&gt;
 
int main(void) {
  FILE *my_stdout = stdout;
  if (fputs("Hello, World!\n", my_stdout) == EOF) {
    /* Handle error */
  }
  return 0;
}
</sample>
 </section>
 <section title="Risk Assessment">
  <p>Using a copy of a <code>FILE</code> object in place of the original may result in a crash, which can be used in a <a href="https://wiki.sei.cmu.edu/confluence/display/c/BB.+Definitions#BB.Definitions-denial-of-service">denial-of-service attack</a>.</p>
  <table>
   <tbody>
    <tr>
     <th>
      Rule
     </th>
     <th>
      Severity
     </th>
     <th>
      Likelihood
     </th>
     <th>
      Remediation Cost
     </th>
     <th>
      Priority
     </th>
     <th>
      Level
     </th>
    </tr>
    <tr>
     <td>
      FIO38-C
     </td>
     <td>
      Low
     </td>
     <td>
      Probable
     </td>
     <td>
      Medium
     </td>
     <td>
      <strong>P4</strong>
     </td>
     <td>
      <strong>L3</strong>
     </td>
    </tr>
   </tbody>
  </table>
 </section>
 <section title="Automated Detection">
  <table>
   <tbody>
    <tr>
     <th>
      Tool
     </th>
     <th>
      Version
     </th>
     <th>
      Checker
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/pages/viewpage.action?pageId=87152428">
       Astr√©e
      </a>
     </td>
     <td>
      20.10
     </td>
     <td>
      <strong>file-dereference</strong>
     </td>
     <td>
      Partially checked
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/Axivion+Bauhaus+Suite">
       Axivion Bauhaus Suite
      </a>
     </td>
     <td>
      7.2.0
     </td>
     <td>
      <strong>CertC-FIO38</strong>
     </td>
     <td>
      Fully implemented
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/Clang">
       Clang
      </a>
     </td>
     <td>
      3.9
     </td>
     <td>
      <code>misc-non-copyable-objects</code>
     </td>
     <td>
      Checked with
      <code>clang-tidy</code>
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/Rose">
       Compass/ROSE
      </a>
     </td>
     <td>
     </td>
     <td>
     </td>
     <td>
      Can detect simple violations of this rule
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/Coverity">
       Coverity
      </a>
     </td>
     <td>
      2017.07
     </td>
     <td>
      <strong>MISRA C 2012 Rule 22.5</strong>
     </td>
     <td>
      Partially implemented
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/Helix+QAC">
       Helix QAC
      </a>
     </td>
     <td>
      2021.3
     </td>
     <td>
      <strong>C1485, C5028</strong>
      <strong>C++3113, C++3114</strong>
     </td>
     <td>
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/Klocwork">
       Klocwork
      </a>
     </td>
     <td>
      2021.4
     </td>
     <td>
      <strong>MISRA.FILE_PTR.DEREF.2012</strong>
      <strong>MISRA.FILE_PTR.DEREF.CAST.2012</strong>
      <strong>MISRA.FILE_PTR.DEREF.INDIRECT.2012</strong>
      <strong>MISRA.FILE_PTR.DEREF.RETURN.2012</strong>
     </td>
     <td>
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/LDRA">
       LDRA tool suite
      </a>
     </td>
     <td>
      9.7.1
     </td>
     <td>
      <strong>591 S</strong>
     </td>
     <td>
      Fully implemented
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/Parasoft">
       Parasoft C/C++test
      </a>
     </td>
     <td>
      2021.2
     </td>
     <td>
      <strong>CERT_C-FIO38-a</strong>
     </td>
     <td>
      A pointer to a FILE object shall not be dereferenced
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/PC-lint+Plus">
       PC-lint Plus
      </a>
     </td>
     <td>
      1.4
     </td>
     <td>
      <strong>9047</strong>
     </td>
     <td>
      Partially supported: reports when a FILE pointer is dereferenced
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/Polyspace+Bug+Finder">
       Polyspace Bug Finder
      </a>
     </td>
     <td>
      R2021a
     </td>
     <td>
      <a href="https://www.mathworks.com/help/bugfinder/ref/certcrulefio38c.html">
       CERT C: Rule FIO38-C
      </a>
     </td>
     <td>
      Checks for misuse of a FILE object (rule fully covered)
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/PRQA+QA-C">
       PRQA QA-C
      </a>
     </td>
     <td>
      9.7
     </td>
     <td>
      <strong>1485, 5028 </strong>
     </td>
     <td>
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/RuleChecker">
       RuleChecker
      </a>
     </td>
     <td>
      20.10
     </td>
     <td>
      <strong>file-dereference</strong>
     </td>
     <td>
      Partially checked
     </td>
    </tr>
   </tbody>
  </table>
 </section>
 <section title="Related Vulnerabilities">
  <p>Search for <a href="https://wiki.sei.cmu.edu/confluence/display/c/BB.+Definitions#BB.Definitions-vulnerability">vulnerabilities</a> resulting from the violation of this rule on the <a href="https://www.kb.cert.org/vulnotes/bymetric?searchview&amp;query=FIELD+KEYWORDS+contains+FIO38-C">CERT website</a>.</p>
 </section>
 <section title="Related Guidelines">
  <p><a href="https://wiki.sei.cmu.edu/confluence/display/c/How+this+Coding+Standard+is+Organized#HowthisCodingStandardisOrganized-RelatedGuidelines">Key here</a> (explains table format and definitions)</p>
  <table>
   <tbody>
    <tr>
     <th>
      Taxonomy
     </th>
     <th>
      Taxonomy item
     </th>
     <th>
      Relationship
     </th>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/AA.+Bibliography#AA.Bibliography-ISO-IECTS17961">
       ISO/IEC TS 17961:2013
      </a>
     </td>
     <td>
      Copying a
      <code>FILE</code>
      object [filecpy]
     </td>
     <td>
      Prior to 2018-01-12: CERT: Unspecified Relationship
     </td>
    </tr>
   </tbody>
  </table>
 </section>
 <section title="Bibliography">
  <table>
   <tbody>
    <tr>
     <td>
      [
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/AA.+Bibliography#AA.Bibliography-ISO-IEC9899-2011">
       ISO/IEC 9899:2011
      </a>
      ]
     </td>
     <td>
      7.21.3, "Files"
     </td>
    </tr>
   </tbody>
  </table>
 </section>
</qhelp>