<!DOCTYPE qhelp SYSTEM "qhelp.dtd">
<qhelp>
 <section title="Description">
  <p>Using the value of a pointer to a <code>FILE</code> object after the associated file is closed is <a href="https://wiki.sei.cmu.edu/confluence/display/c/BB.+Definitions#BB.Definitions-undefinedbehavior">undefined behavior</a>. (See <a href="https://wiki.sei.cmu.edu/confluence/display/c/CC.+Undefined+Behavior#CC.UndefinedBehavior-ub_148">undefined behavior 148</a>.) Programs that close the standard streams (especially <code>stdout</code> but also <code>stderr</code> and <code>stdin</code>) must be careful not to use these streams in subsequent function calls, particularly those that implicitly operate on them (such as <code>printf()</code>, <code>perror()</code>, and <code>getc()</code>).</p>
  <p>This rule can be generalized to other file representations.</p>
 </section>
 <section title="Noncompliant Code Example">
  <p>In this noncompliant code example, the <code>stdout</code> stream is used after it is closed:</p>
  <sample language="cpp">#include &lt;stdio.h&gt;
 
int close_stdout(void) {
  if (fclose(stdout) == EOF) {
    return -1;
  }
 
  printf("stdout successfully closed.\n");
  return 0;
}</sample>
 </section>
 <section title="Compliant Solution">
  <p>In this compliant solution, <code>stdout</code> is not used again after it is closed. This must remain true for the remainder of the program, or <code>stdout</code> must be assigned the address of an open file object. </p>
  <sample language="cpp">#include &lt;stdio.h&gt;
 
int close_stdout(void) {
  if (fclose(stdout) == EOF) {
    return -1;
  }

  fputs("stdout successfully closed.", stderr);
  return 0;
}</sample>
 </section>
 <section title="Risk Assessment">
  <p>Using the value of a pointer to a <code>FILE</code> object after the associated file is closed is <a href="https://wiki.sei.cmu.edu/confluence/display/c/BB.+Definitions#BB.Definitions-undefinedbehavior">undefined behavior</a>.</p>
  <table>
   <tbody>
    <tr>
     <th>
      Rule
     </th>
     <th>
      Severity
     </th>
     <th>
      Likelihood
     </th>
     <th>
      Remediation Cost
     </th>
     <th>
      Priority
     </th>
     <th>
      Level
     </th>
    </tr>
    <tr>
     <td>
      FIO46-C
     </td>
     <td>
      Medium
     </td>
     <td>
      Unlikely
     </td>
     <td>
      Medium
     </td>
     <td>
      <strong>P4</strong>
     </td>
     <td>
      <strong>L3</strong>
     </td>
    </tr>
   </tbody>
  </table>
 </section>
 <section title="Automated Detection">
  <table>
   <tbody>
    <tr>
     <th>
      Tool
     </th>
     <th>
      Version
     </th>
     <th>
      Checker
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/pages/viewpage.action?pageId=87152428">
       Astr√©e
      </a>
     </td>
     <td>
      20.10
     </td>
     <td>
     </td>
     <td>
      Supported
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/CodeSonar">
       CodeSonar
      </a>
     </td>
     <td>
      6.2p0
     </td>
     <td>
      <strong>IO.UAC</strong>
     </td>
     <td>
      Use after close
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/Rose">
       Compass/ROSE
      </a>
     </td>
     <td>
     </td>
     <td>
     </td>
     <td>
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/Coverity">
       Coverity
      </a>
     </td>
     <td>
      2017.07
     </td>
     <td>
      <strong>USE_AFTER_FREE</strong>
     </td>
     <td>
      Implemented
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/Helix+QAC">
       Helix QAC
      </a>
     </td>
     <td>
      2021.3
     </td>
     <td>
      <strong>C2696, C2697, C2698</strong>
      <strong>C++2696, C++2697, C++2698</strong>
     </td>
     <td>
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/Klocwork">
       Klocwork
      </a>
     </td>
     <td>
      2021.4
     </td>
     <td>
      <strong><a href="https://support.roguewave.com/documentation/klocwork/en/current/certcandcsecurecodingstandardidsmappedtoklocworkcandccheckers/">SV.INCORRECT_RESOURCE_HANDLING.URH</a></strong>
     </td>
     <td>
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/LDRA">
       LDRA tool suite
      </a>
     </td>
     <td>
      9.7.1
     </td>
     <td>
      <strong>48 D</strong>
     </td>
     <td>
      Partially implemented
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/Parasoft">
       Parasoft C/C++test
      </a>
     </td>
     <td>
      2021.2
     </td>
     <td>
      <strong>CERT_C-FIO46-a</strong>
     </td>
     <td>
      Do not use resources that have been freed
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/PC-lint+Plus">
       PC-lint Plus
      </a>
     </td>
     <td>
      1.4
     </td>
     <td>
      <strong>2471</strong>
     </td>
     <td>
      Fully supported
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/Polyspace+Bug+Finder">
       Polyspace Bug Finder
      </a>
     </td>
     <td>
      R2021a
     </td>
     <td>
      <a href="https://www.mathworks.com/help/bugfinder/ref/certcrulefio46c.html">
       CERT C: Rule FIO46-C
      </a>
     </td>
     <td>
      Checks for use of previously closed resource (rule partially covered)
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/PRQA+QA-C">
       PRQA QA-C
      </a>
     </td>
     <td>
      9.7
     </td>
     <td>
      <strong>2696, 2697, 2698</strong>
     </td>
     <td>
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/pages/viewpage.action?pageId=88046345">
       PRQA QA-C++
      </a>
     </td>
     <td>
      4.4
     </td>
     <td>
      <strong>2696, 2697, 2698</strong>
     </td>
     <td>
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/pages/viewpage.action?pageId=87151949">
       SonarQube C/C++ Plugin
      </a>
     </td>
     <td>
      3.11
     </td>
     <td>
      <strong><a href="https://www.sonarsource.com/products/codeanalyzers/sonarcfamilyforcpp/rules-c.html#RSPEC-3588">S3588</a></strong>
     </td>
     <td>
     </td>
    </tr>
   </tbody>
  </table>
 </section>
 <section title="Related Vulnerabilities">
  <p>Search for <a href="https://wiki.sei.cmu.edu/confluence/display/c/BB.+Definitions#BB.Definitions-vulnerability">vulnerabilities</a> resulting from the violation of this rule on the <a href="https://www.kb.cert.org/vulnotes/bymetric?searchview&amp;query=FIELD+KEYWORDS+contains+FIO46-C">CERT website</a>.</p>
 </section>
 <section title="Bibliography">
  <table>
   <tbody>
    <tr>
     <td>
      [
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/AA.+Bibliography#AA.Bibliography-IEEEStd1003.1-2013">
       IEEE Std 1003.1:2013
      </a>
      ]
     </td>
     <td>
      XSH, System Interfaces,
      <code>open</code>
     </td>
    </tr>
    <tr>
     <td>
      [
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/AA.+Bibliography#AA.Bibliography-ISO-IEC9899-2011">
       ISO/IEC 9899:2011
      </a>
      ]
     </td>
     <td>
      Subclause 7.21.3, "Files"
      Subclause 7.21.5.1, "The
      <code>fclose</code>
      Function"
     </td>
    </tr>
   </tbody>
  </table>
 </section>
</qhelp>