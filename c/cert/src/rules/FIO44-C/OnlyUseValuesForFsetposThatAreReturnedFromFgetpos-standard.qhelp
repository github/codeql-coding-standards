<!DOCTYPE qhelp SYSTEM "qhelp.dtd">
<qhelp>
 <section title="Description">
  <p>The C Standard, 7.21.9.3 [<a href="https://wiki.sei.cmu.edu/confluence/display/c/AA.+Bibliography#AA.Bibliography-ISO-IEC9899-2011">ISO/IEC 9899:2011</a>], defines the following behavior for <code>fsetpos()</code>:</p>
  <blockquote>
   <p>The <code>fsetpos</code> function sets the <code>mbstate_t</code> object (if any) and file position indicator for the stream pointed to by <code>stream</code> according to the value of the object pointed to by <code>pos</code>, which shall be a value obtained from an earlier successful call to the <code>fgetpos</code> function on a stream associated with the same file.</p>
  </blockquote>
  <p>Invoking the <code>fsetpos()</code> function with any other values for <code>pos</code> is <a href="https://wiki.sei.cmu.edu/confluence/display/c/BB.+Definitions#BB.Definitions-undefinedbehavior">undefined behavior</a>.</p>
 </section>
 <section title="Noncompliant Code Example">
  <p>This noncompliant code example attempts to read three values from a file and then set the file position pointer back to the beginning of the file:</p>
  <sample language="cpp">#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
 
int opener(FILE *file) {
  int rc;
  fpos_t offset;

  memset(&amp;offset, 0, sizeof(offset));

  if (file == NULL) { 
    return -1;
  }

  /* Read in data from file */

  rc = fsetpos(file, &amp;offset);
  if (rc != 0 ) {
    return rc;
  }

  return 0;
}
</sample>
  <p>Only the return value of an <code>fgetpos()</code> call is a valid argument to <code>fsetpos()</code>; passing a value of type <code>fpos_t</code> that was created in any other way is <a href="https://wiki.sei.cmu.edu/confluence/display/c/BB.+Definitions#BB.Definitions-undefinedbehavior">undefined behavior</a>.</p>
 </section>
 <section title="Compliant Solution">
  <p>In this compliant solution, the initial file position indicator is stored by first calling <code>fgetpos()</code>, which is used to restore the state to the beginning of the file in the later call to <code>fsetpos()</code>:</p>
  <sample language="cpp">#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
 
int opener(FILE *file) {
  int rc;
  fpos_t offset;

  if (file == NULL) {
    return -1;
  }

  rc = fgetpos(file, &amp;offset);
  if (rc != 0 ) {
    return rc;
  }

  /* Read in data from file */

  rc = fsetpos(file, &amp;offset);
  if (rc != 0 ) {
    return rc;
  }

  return 0;
}
</sample>
 </section>
 <section title="Risk Assessment">
  <p>Misuse of the <code>fsetpos()</code> function can position a file position indicator to an unintended location in the file.</p>
  <table>
   <tbody>
    <tr>
     <th>
      Rule
     </th>
     <th>
      Severity
     </th>
     <th>
      Likelihood
     </th>
     <th>
      Remediation Cost
     </th>
     <th>
      Priority
     </th>
     <th>
      Level
     </th>
    </tr>
    <tr>
     <td>
      FIO44-C
     </td>
     <td>
      Medium
     </td>
     <td>
      Unlikely
     </td>
     <td>
      Medium
     </td>
     <td>
      <strong>P4</strong>
     </td>
     <td>
      <strong>L3</strong>
     </td>
    </tr>
   </tbody>
  </table>
 </section>
 <section title="Automated Detection">
  <table>
   <tbody>
    <tr>
     <th>
      Tool
     </th>
     <th>
      Version
     </th>
     <th>
      Checker
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/CodeSonar">
       CodeSonar
      </a>
     </td>
     <td>
      6.2p0
     </td>
     <td>
      <strong>(customization)</strong>
     </td>
     <td>
      Users can add a custom check for violations of this constraint.
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/Rose">
       Compass/ROSE
      </a>
     </td>
     <td>
     </td>
     <td>
     </td>
     <td>
      Can detect common violations of this rule. However, it cannot handle cases in which the value returned by
      <code>fgetpos()</code>
      is copied between several variables before being passed to
      <code>fsetpos()</code>
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/Helix+QAC">
       Helix QAC
      </a>
     </td>
     <td>
      2021.3
     </td>
     <td>
      <strong>C4841, C4842, C4843</strong>
      <strong>C++4841, C++4842, C++4843</strong>
     </td>
     <td>
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/LDRA">
       LDRA tool suite
      </a>
     </td>
     <td>
      9.7.1
     </td>
     <td>
      <strong>82 D</strong>
     </td>
     <td>
      Fully implemented
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/Parasoft">
       Parasoft C/C++test
      </a>
     </td>
     <td>
      2021.2
     </td>
     <td>
      <strong>CERT_C-FIO44-a</strong>
     </td>
     <td>
      Only use values for fsetpos() that are returned from fgetpos()
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/Polyspace+Bug+Finder">
       Polyspace Bug Finder
      </a>
     </td>
     <td>
     </td>
     <td>
      <a href="https://www.mathworks.com/help/bugfinder/ref/certcrulefio44c.html">
       CERT C: Rule FIO44-C
      </a>
     </td>
     <td>
      Checks for invalid file position (rule partially covered)
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/PRQA+QA-C">
       PRQA QA-C
      </a>
     </td>
     <td>
      9.7
     </td>
     <td>
      <strong>4841, 4842, 4843</strong>
     </td>
     <td>
      Enforced by QAC
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/pages/viewpage.action?pageId=88046345">
       PRQA QA-C++
      </a>
     </td>
     <td>
      4.4
     </td>
     <td>
      <strong>4841, 4842, 4843</strong>
     </td>
     <td>
     </td>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/cplusplus/PVS-Studio">
       PVS-Studio
      </a>
     </td>
     <td>
      7.17
     </td>
     <td>
      <strong><a href="https://pvs-studio.com/en/docs/warnings/v1035/">V1035</a></strong>
     </td>
     <td>
     </td>
    </tr>
   </tbody>
  </table>
 </section>
 <section title="Related Vulnerabilities">
  <p>Search for <a href="https://wiki.sei.cmu.edu/confluence/display/c/BB.+Definitions#BB.Definitions-vulnerability">vulnerabilities</a> resulting from the violation of this rule on the <a href="https://www.kb.cert.org/vulnotes/bymetric?searchview&amp;query=FIELD+KEYWORDS+contains+FIO44-C">CERT website</a>.</p>
 </section>
 <section title="Related Guidelines">
  <p><a href="https://wiki.sei.cmu.edu/confluence/display/c/How+this+Coding+Standard+is+Organized#HowthisCodingStandardisOrganized-RelatedGuidelines">Key here</a> (explains table format and definitions)</p>
  <table>
   <tbody>
    <tr>
     <th>
      Taxonomy
     </th>
     <th>
      Taxonomy item
     </th>
     <th>
      Relationship
     </th>
    </tr>
    <tr>
     <td>
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/AA.+Bibliography#AA.Bibliography-ISO-IECTS17961">
       ISO/IEC TS 17961:2013
      </a>
     </td>
     <td>
      Using a value for fsetpos other than a value returned from fgetpos [xfilepos]
     </td>
     <td>
      Prior to 2018-01-12: CERT: Unspecified Relationship
     </td>
    </tr>
   </tbody>
  </table>
 </section>
 <section title="Bibliography">
  <table>
   <tbody>
    <tr>
     <td>
      [
      <a href="https://wiki.sei.cmu.edu/confluence/display/c/AA.+Bibliography#AA.Bibliography-ISO-IEC9899-2011">
       ISO/IEC 9899:2011
      </a>
      ]
     </td>
     <td>
      7.21.9.3, "The
      <code>fsetpos</code>
      Function"
     </td>
    </tr>
   </tbody>
  </table>
 </section>
</qhelp>