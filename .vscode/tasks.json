{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Standards Automation: Initialize venv",
            "type": "shell",
            "command": "python3 -mvenv scripts${pathSeparator}.venv",
            "presentation": {
                "reveal": "always",
                "panel": "new",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "üîÉ Standards Automation: Switch To Test or Implementation",
            "type": "shell",
            "command": "pwsh .${pathSeparator}scripts${pathSeparator}vscode${pathSeparator}Get-TestOrQueryDirectoryForCurrentFile.ps1 -CurrentFile ${file}",
            "presentation": {
                "reveal": "never",
                "panel": "dedicated"
            },
            "problemMatcher": []
        },
        {
            "label": "Standards Automation: Install Deps",
            "type": "shell",
            "windows": {
                "command": ".${pathSeparator}scripts${pathSeparator}.venv${pathSeparator}Scripts${pathSeparator}pip3.exe install -r scripts${pathSeparator}requirements.txt"
            },
            "linux": {
                "command": ".${pathSeparator}scripts${pathSeparator}.venv${pathSeparator}bin${pathSeparator}pip3 install -r scripts${pathSeparator}requirements.txt"
            },
            "osx": {
                "command": ".${pathSeparator}scripts${pathSeparator}.venv${pathSeparator}bin${pathSeparator}pip3 install -r scripts${pathSeparator}requirements.txt"
            },
            "dependsOn": "Standards Automation: Initialize venv",
            "presentation": {
                "reveal": "always",
                "panel": "new",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "üî• Standards Automation: Initialize",
            "dependsOn": "Standards Automation: Install Deps",
            "presentation": {
                "reveal": "always",
                "panel": "new",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "üìè Standards Automation: Generate Rule Description File",
            "type": "shell",
            "windows": {
                "command": ".${pathSeparator}scripts${pathSeparator}.venv${pathSeparator}Scripts${pathSeparator}python.exe scripts${pathSeparator}generate_rules${pathSeparator}generate_package_description.py  ${input:language} ${input:rule_package_name}"
            },
            "linux": {
                "command": ".${pathSeparator}scripts${pathSeparator}.venv${pathSeparator}bin${pathSeparator}python3 scripts${pathSeparator}generate_rules${pathSeparator}generate_package_description.py ${input:language} ${input:rule_package_name}"
            },
            "osx": {
                "command": ".${pathSeparator}scripts${pathSeparator}.venv${pathSeparator}bin${pathSeparator}python3 scripts${pathSeparator}generate_rules${pathSeparator}generate_package_description.py ${input:language} ${input:rule_package_name}"
            },
            "presentation": {
                "reveal": "always",
                "panel": "new",
                "focus": true
            },
            "runOptions": {
                "reevaluateOnRerun": false
            },
            "problemMatcher": []
        },
        {
            "label": "üì¶ Standards Automation: Generate Package Files",
            "type": "shell",
            "windows": {
                "command": ".${pathSeparator}scripts${pathSeparator}.venv${pathSeparator}Scripts${pathSeparator}python.exe scripts${pathSeparator}generate_rules${pathSeparator}generate_package_files.py ${input:language} ${input:rule_package_name}"
            },
            "linux": {
                "command": ".${pathSeparator}scripts${pathSeparator}.venv${pathSeparator}bin${pathSeparator}python3 scripts${pathSeparator}generate_rules${pathSeparator}generate_package_files.py ${input:language} ${input:rule_package_name}"
            },
            "osx": {
                "command": ".${pathSeparator}scripts${pathSeparator}.venv${pathSeparator}bin${pathSeparator}python3 scripts${pathSeparator}generate_rules${pathSeparator}generate_package_files.py ${input:language} ${input:rule_package_name}"
            },
            "presentation": {
                "reveal": "always",
                "panel": "new",
                "focus": true
            },
            "runOptions": {
                "reevaluateOnRerun": false
            },
            "problemMatcher": []
        },
        {
            "label": "üìñ Standards Automation: Generate Help Files for CERT rules",
            "type": "shell",
            "windows": {
                "command": ".${pathSeparator}scripts${pathSeparator}.venv${pathSeparator}Scripts${pathSeparator}python.exe scripts${pathSeparator}help${pathSeparator}cert-help-extraction.py ${input:rule}"
            },
            "linux": {
                "command": ".${pathSeparator}scripts${pathSeparator}.venv${pathSeparator}bin${pathSeparator}python3 scripts${pathSeparator}help${pathSeparator}cert-help-extraction.py ${input:rule}"
            },
            "osx": {
                "command": ".${pathSeparator}scripts${pathSeparator}.venv${pathSeparator}bin${pathSeparator}python3 scripts${pathSeparator}help${pathSeparator}cert-help-extraction.py ${input:rule}"
            },
            "presentation": {
                "reveal": "always",
                "panel": "new",
                "focus": true
            },
            "runOptions": {
                "reevaluateOnRerun": false
            },
            "problemMatcher": []
        },
        {
            "label": "üß™ Standards Automation: Build Case Test DB",
            "type": "shell",
            "windows": {
                "command": ".${pathSeparator}scripts${pathSeparator}.venv${pathSeparator}Scripts${pathSeparator}python.exe scripts${pathSeparator}build_test_database.py ${input:language} ${input:standard} ${input:rule}"
            },
            "linux": {
                "command": ".${pathSeparator}scripts${pathSeparator}.venv${pathSeparator}bin${pathSeparator}python3 scripts${pathSeparator}build_test_database.py ${input:language} ${input:standard} ${input:rule}"
            },
            "osx": {
                "command": ".${pathSeparator}scripts${pathSeparator}.venv${pathSeparator}bin${pathSeparator}python3 scripts${pathSeparator}build_test_database.py ${input:language} ${input:standard}  ${input:rule}"
            },
            "presentation": {
                "reveal": "always",
                "panel": "new",
                "focus": true
            },
            "runOptions": {
                "reevaluateOnRerun": false
            },
            "problemMatcher": []
        },
        {
            "label": "üìù Standards Automation: Format CodeQL",
            "type": "shell",
            "command": "${config:codeQL.cli.executablePath} query format -i ${file}",
            "presentation": {
                "reveal": "always",
                "panel": "new",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "üìù Standards Automation: Format Test",
            "type": "shell",
            "command": "clang-format --style=file -i --verbose ${file}",
            "presentation": {
                "reveal": "always",
                "panel": "new",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "‚ö° Standards Automation: Generated Expected Output",
            "type": "shell",
            "command": " ${config:codeQL.cli.executablePath} test run --show-extractor-output --search-path . ${file}",
            "presentation": {
                "reveal": "always",
                "panel": "new",
                "focus": true
            },
            "runOptions": {
                "reevaluateOnRerun": false
            },
            "problemMatcher": []
        },
    ],
    "inputs": [
        {
            "id": "rule_package_name",
            "description": "Rule Package Name",
            "default": "",
            "type": "pickString",
            "options": [
                "Allocations",
                "BannedFunctions",
                "BannedLibraries",
                "BannedSyntax",
                "BannedTypes",
                "Classes",
                "Comments",
                "Contracts1",
                "Concurrency",
                "Concurrency",
                "Concurrency1",
                "Concurrency2",
                "Concurrency3",
                "Conditionals",
                "Const",
                "DeadCode",
                "Declarations",
                "Declarations1",
                "Exceptions1",
                "Exceptions2",
                "Expressions",
                "Freed",
                "Functions",
                "IO1",
                "IO2",
                "IO3",
                "IO4",
                "Includes",
                "Initialization",
                "IntegerConversion",
                "Invariants",
                "Iterators",
                "Lambdas",
                "Literals",
                "Loops",
                "Macros",
                "Misc",
                "MoveForward",
                "Naming",
                "Null",
                "OperatorInvariants",
                "Operators",
                "Pointers",
                "Pointers1",
                "Pointers2",
                "Scope",
                "SideEffects1",
                "SideEffects2",
                "SmartPointers1",
                "SmartPointers2",
                "Strings",
                "Strings1",
                "Strings2",
                "Strings3",
                "Syntax",
                "Templates",
                "TypeRanges",
                "Lambdas",
                "Pointers",
                "Preprocessor1",
                "Preprocessor2",
                "Preprocessor3",
                "Preprocessor4",
                "Preprocessor5",
                "IntegerConversion",
                "Expressions",
                "DeadCode",
                "VirtualFunctions"
            ]
        },
        {
            "id": "standard",
            "description": "Name of standard (e.g., autosar)",
            "default": "autosar",
            "type": "pickString",
            "options": [
                "autosar",
                "cert",
                "misra",
                "common"
            ]
        },
        {
            "id": "language",
            "description": "Name of language",
            "default": "cpp",
            "type": "pickString",
            "options": [
                "cpp",
                "c"
            ]
        },
        {
            "id": "rule",
            "description": "Rule in package (e.g., M3-9-1)",
            "default": "",
            "type": "promptString"
        },
    ]
}