//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  */
import cpp
import RuleMetadata

newtype Exceptions1Query =
  TExceptionThrownOnCompletionQuery() or
  TRecoverableUncheckedExceptionsQuery() or
  TUnrecoverableCheckedExceptionsQuery() or
  TPointerExceptionObjectQuery() or
  TThrownExceptionsShouldBeUniqueQuery() or
  TConstructorsThatAreNotNoexceptInvokedBeforeProgramStartupQuery() or
  TMissingCatchHandlerInMainQuery() or
  TCatchAllEllipsisUsedInNonMainQuery() or
  TUseOfDynamicExceptionSpecificationQuery() or
  TNoExceptFunctionThrowsQuery() or
  TMissingNoExceptQuery() or
  TExplicitAbruptTerminationAutosarQuery() or
  TConditionVariablePostConditionFailedAutosarQuery() or
  TJoinableThreadCopiedOrDestroyedAutosarQuery() or
  TRethrowNestedWithoutCaptureAutosarQuery() or
  TExitHandlerThrowsExceptionAutosarQuery() or
  TGotoToCatchBlockQuery() or
  TSwitchToCatchBlockQuery() or
  TExceptionThrownDuringThrowQuery() or
  TNullThrownExplicitlyQuery() or
  TEmptyThrowOutsideCatchQuery() or
  TCatchAllExplicitlyThrownExceptionsQuery() or
  TCatchAllHandlerLastQuery() or
  TConditionVariablePostConditionFailedCertQuery() or
  TJoinableThreadCopiedOrDestroyedCertQuery() or
  TRethrowNestedWithoutCaptureCertQuery() or
  TExplicitAbruptTerminationCertQuery() or
  TExitHandlerThrowsExceptionCertQuery() or
  THandleAllExceptionsQuery() or
  TDestroyedValueReferencedInConstructorDestructorCatchBlockQuery() or
  THonorExceptionSpecificationsQuery() or
  THandleAllExceptionsThrownBeforeMainBeginsExecutingQuery() or
  TExceptionObjectsMustBeNothrowCopyConstructibleQuery() or
  TCatchExceptionsByLvalueReferenceQuery()

predicate isExceptions1QueryMetadata(Query query, string queryId, string ruleId) {
  query =
    // `Query` instance for the `exceptionThrownOnCompletion` query
    Exceptions1Package::exceptionThrownOnCompletionQuery() and
  queryId =
    // `@id` for the `exceptionThrownOnCompletion` query
    "cpp/autosar/exception-thrown-on-completion" and
  ruleId = "A15-0-1"
  or
  query =
    // `Query` instance for the `recoverableUncheckedExceptions` query
    Exceptions1Package::recoverableUncheckedExceptionsQuery() and
  queryId =
    // `@id` for the `recoverableUncheckedExceptions` query
    "cpp/autosar/recoverable-unchecked-exceptions" and
  ruleId = "A15-0-4"
  or
  query =
    // `Query` instance for the `unrecoverableCheckedExceptions` query
    Exceptions1Package::unrecoverableCheckedExceptionsQuery() and
  queryId =
    // `@id` for the `unrecoverableCheckedExceptions` query
    "cpp/autosar/unrecoverable-checked-exceptions" and
  ruleId = "A15-0-5"
  or
  query =
    // `Query` instance for the `pointerExceptionObject` query
    Exceptions1Package::pointerExceptionObjectQuery() and
  queryId =
    // `@id` for the `pointerExceptionObject` query
    "cpp/autosar/pointer-exception-object" and
  ruleId = "A15-1-2"
  or
  query =
    // `Query` instance for the `thrownExceptionsShouldBeUnique` query
    Exceptions1Package::thrownExceptionsShouldBeUniqueQuery() and
  queryId =
    // `@id` for the `thrownExceptionsShouldBeUnique` query
    "cpp/autosar/thrown-exceptions-should-be-unique" and
  ruleId = "A15-1-3"
  or
  query =
    // `Query` instance for the `constructorsThatAreNotNoexceptInvokedBeforeProgramStartup` query
    Exceptions1Package::constructorsThatAreNotNoexceptInvokedBeforeProgramStartupQuery() and
  queryId =
    // `@id` for the `constructorsThatAreNotNoexceptInvokedBeforeProgramStartup` query
    "cpp/autosar/constructors-that-are-not-noexcept-invoked-before-program-startup" and
  ruleId = "A15-2-1"
  or
  query =
    // `Query` instance for the `missingCatchHandlerInMain` query
    Exceptions1Package::missingCatchHandlerInMainQuery() and
  queryId =
    // `@id` for the `missingCatchHandlerInMain` query
    "cpp/autosar/missing-catch-handler-in-main" and
  ruleId = "A15-3-3"
  or
  query =
    // `Query` instance for the `catchAllEllipsisUsedInNonMain` query
    Exceptions1Package::catchAllEllipsisUsedInNonMainQuery() and
  queryId =
    // `@id` for the `catchAllEllipsisUsedInNonMain` query
    "cpp/autosar/catch-all-ellipsis-used-in-non-main" and
  ruleId = "A15-3-4"
  or
  query =
    // `Query` instance for the `useOfDynamicExceptionSpecification` query
    Exceptions1Package::useOfDynamicExceptionSpecificationQuery() and
  queryId =
    // `@id` for the `useOfDynamicExceptionSpecification` query
    "cpp/autosar/use-of-dynamic-exception-specification" and
  ruleId = "A15-4-1"
  or
  query =
    // `Query` instance for the `noExceptFunctionThrows` query
    Exceptions1Package::noExceptFunctionThrowsQuery() and
  queryId =
    // `@id` for the `noExceptFunctionThrows` query
    "cpp/autosar/no-except-function-throws" and
  ruleId = "A15-4-2"
  or
  query =
    // `Query` instance for the `missingNoExcept` query
    Exceptions1Package::missingNoExceptQuery() and
  queryId =
    // `@id` for the `missingNoExcept` query
    "cpp/autosar/missing-no-except" and
  ruleId = "A15-4-4"
  or
  query =
    // `Query` instance for the `explicitAbruptTerminationAutosar` query
    Exceptions1Package::explicitAbruptTerminationAutosarQuery() and
  queryId =
    // `@id` for the `explicitAbruptTerminationAutosar` query
    "cpp/autosar/explicit-abrupt-termination-autosar" and
  ruleId = "A15-5-2"
  or
  query =
    // `Query` instance for the `conditionVariablePostConditionFailedAutosar` query
    Exceptions1Package::conditionVariablePostConditionFailedAutosarQuery() and
  queryId =
    // `@id` for the `conditionVariablePostConditionFailedAutosar` query
    "cpp/autosar/condition-variable-post-condition-failed-autosar" and
  ruleId = "A15-5-3"
  or
  query =
    // `Query` instance for the `joinableThreadCopiedOrDestroyedAutosar` query
    Exceptions1Package::joinableThreadCopiedOrDestroyedAutosarQuery() and
  queryId =
    // `@id` for the `joinableThreadCopiedOrDestroyedAutosar` query
    "cpp/autosar/joinable-thread-copied-or-destroyed-autosar" and
  ruleId = "A15-5-3"
  or
  query =
    // `Query` instance for the `rethrowNestedWithoutCaptureAutosar` query
    Exceptions1Package::rethrowNestedWithoutCaptureAutosarQuery() and
  queryId =
    // `@id` for the `rethrowNestedWithoutCaptureAutosar` query
    "cpp/autosar/rethrow-nested-without-capture-autosar" and
  ruleId = "A15-5-3"
  or
  query =
    // `Query` instance for the `exitHandlerThrowsExceptionAutosar` query
    Exceptions1Package::exitHandlerThrowsExceptionAutosarQuery() and
  queryId =
    // `@id` for the `exitHandlerThrowsExceptionAutosar` query
    "cpp/autosar/exit-handler-throws-exception-autosar" and
  ruleId = "A15-5-3"
  or
  query =
    // `Query` instance for the `gotoToCatchBlock` query
    Exceptions1Package::gotoToCatchBlockQuery() and
  queryId =
    // `@id` for the `gotoToCatchBlock` query
    "cpp/autosar/goto-to-catch-block" and
  ruleId = "M15-0-3"
  or
  query =
    // `Query` instance for the `switchToCatchBlock` query
    Exceptions1Package::switchToCatchBlockQuery() and
  queryId =
    // `@id` for the `switchToCatchBlock` query
    "cpp/autosar/switch-to-catch-block" and
  ruleId = "M15-0-3"
  or
  query =
    // `Query` instance for the `exceptionThrownDuringThrow` query
    Exceptions1Package::exceptionThrownDuringThrowQuery() and
  queryId =
    // `@id` for the `exceptionThrownDuringThrow` query
    "cpp/autosar/exception-thrown-during-throw" and
  ruleId = "M15-1-1"
  or
  query =
    // `Query` instance for the `nullThrownExplicitly` query
    Exceptions1Package::nullThrownExplicitlyQuery() and
  queryId =
    // `@id` for the `nullThrownExplicitly` query
    "cpp/autosar/null-thrown-explicitly" and
  ruleId = "M15-1-2"
  or
  query =
    // `Query` instance for the `emptyThrowOutsideCatch` query
    Exceptions1Package::emptyThrowOutsideCatchQuery() and
  queryId =
    // `@id` for the `emptyThrowOutsideCatch` query
    "cpp/autosar/empty-throw-outside-catch" and
  ruleId = "M15-1-3"
  or
  query =
    // `Query` instance for the `catchAllExplicitlyThrownExceptions` query
    Exceptions1Package::catchAllExplicitlyThrownExceptionsQuery() and
  queryId =
    // `@id` for the `catchAllExplicitlyThrownExceptions` query
    "cpp/autosar/catch-all-explicitly-thrown-exceptions" and
  ruleId = "M15-3-4"
  or
  query =
    // `Query` instance for the `catchAllHandlerLast` query
    Exceptions1Package::catchAllHandlerLastQuery() and
  queryId =
    // `@id` for the `catchAllHandlerLast` query
    "cpp/autosar/catch-all-handler-last" and
  ruleId = "M15-3-7"
  or
  query =
    // `Query` instance for the `conditionVariablePostConditionFailedCert` query
    Exceptions1Package::conditionVariablePostConditionFailedCertQuery() and
  queryId =
    // `@id` for the `conditionVariablePostConditionFailedCert` query
    "cpp/cert/condition-variable-post-condition-failed-cert" and
  ruleId = "ERR50-CPP"
  or
  query =
    // `Query` instance for the `joinableThreadCopiedOrDestroyedCert` query
    Exceptions1Package::joinableThreadCopiedOrDestroyedCertQuery() and
  queryId =
    // `@id` for the `joinableThreadCopiedOrDestroyedCert` query
    "cpp/cert/joinable-thread-copied-or-destroyed-cert" and
  ruleId = "ERR50-CPP"
  or
  query =
    // `Query` instance for the `rethrowNestedWithoutCaptureCert` query
    Exceptions1Package::rethrowNestedWithoutCaptureCertQuery() and
  queryId =
    // `@id` for the `rethrowNestedWithoutCaptureCert` query
    "cpp/cert/rethrow-nested-without-capture-cert" and
  ruleId = "ERR50-CPP"
  or
  query =
    // `Query` instance for the `explicitAbruptTerminationCert` query
    Exceptions1Package::explicitAbruptTerminationCertQuery() and
  queryId =
    // `@id` for the `explicitAbruptTerminationCert` query
    "cpp/cert/explicit-abrupt-termination-cert" and
  ruleId = "ERR50-CPP"
  or
  query =
    // `Query` instance for the `exitHandlerThrowsExceptionCert` query
    Exceptions1Package::exitHandlerThrowsExceptionCertQuery() and
  queryId =
    // `@id` for the `exitHandlerThrowsExceptionCert` query
    "cpp/cert/exit-handler-throws-exception-cert" and
  ruleId = "ERR50-CPP"
  or
  query =
    // `Query` instance for the `handleAllExceptions` query
    Exceptions1Package::handleAllExceptionsQuery() and
  queryId =
    // `@id` for the `handleAllExceptions` query
    "cpp/cert/handle-all-exceptions" and
  ruleId = "ERR51-CPP"
  or
  query =
    // `Query` instance for the `destroyedValueReferencedInConstructorDestructorCatchBlock` query
    Exceptions1Package::destroyedValueReferencedInConstructorDestructorCatchBlockQuery() and
  queryId =
    // `@id` for the `destroyedValueReferencedInConstructorDestructorCatchBlock` query
    "cpp/cert/destroyed-value-referenced-in-constructor-destructor-catch-block" and
  ruleId = "ERR53-CPP"
  or
  query =
    // `Query` instance for the `honorExceptionSpecifications` query
    Exceptions1Package::honorExceptionSpecificationsQuery() and
  queryId =
    // `@id` for the `honorExceptionSpecifications` query
    "cpp/cert/honor-exception-specifications" and
  ruleId = "ERR55-CPP"
  or
  query =
    // `Query` instance for the `handleAllExceptionsThrownBeforeMainBeginsExecuting` query
    Exceptions1Package::handleAllExceptionsThrownBeforeMainBeginsExecutingQuery() and
  queryId =
    // `@id` for the `handleAllExceptionsThrownBeforeMainBeginsExecuting` query
    "cpp/cert/handle-all-exceptions-thrown-before-main-begins-executing" and
  ruleId = "ERR58-CPP"
  or
  query =
    // `Query` instance for the `exceptionObjectsMustBeNothrowCopyConstructible` query
    Exceptions1Package::exceptionObjectsMustBeNothrowCopyConstructibleQuery() and
  queryId =
    // `@id` for the `exceptionObjectsMustBeNothrowCopyConstructible` query
    "cpp/cert/exception-objects-must-be-nothrow-copy-constructible" and
  ruleId = "ERR60-CPP"
  or
  query =
    // `Query` instance for the `catchExceptionsByLvalueReference` query
    Exceptions1Package::catchExceptionsByLvalueReferenceQuery() and
  queryId =
    // `@id` for the `catchExceptionsByLvalueReference` query
    "cpp/cert/catch-exceptions-by-lvalue-reference" and
  ruleId = "ERR61-CPP"
}

module Exceptions1Package {
  Query exceptionThrownOnCompletionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `exceptionThrownOnCompletion` query
      TExceptions1PackageQuery(TExceptionThrownOnCompletionQuery())
  }

  Query recoverableUncheckedExceptionsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `recoverableUncheckedExceptions` query
      TExceptions1PackageQuery(TRecoverableUncheckedExceptionsQuery())
  }

  Query unrecoverableCheckedExceptionsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `unrecoverableCheckedExceptions` query
      TExceptions1PackageQuery(TUnrecoverableCheckedExceptionsQuery())
  }

  Query pointerExceptionObjectQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `pointerExceptionObject` query
      TExceptions1PackageQuery(TPointerExceptionObjectQuery())
  }

  Query thrownExceptionsShouldBeUniqueQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `thrownExceptionsShouldBeUnique` query
      TExceptions1PackageQuery(TThrownExceptionsShouldBeUniqueQuery())
  }

  Query constructorsThatAreNotNoexceptInvokedBeforeProgramStartupQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `constructorsThatAreNotNoexceptInvokedBeforeProgramStartup` query
      TExceptions1PackageQuery(TConstructorsThatAreNotNoexceptInvokedBeforeProgramStartupQuery())
  }

  Query missingCatchHandlerInMainQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `missingCatchHandlerInMain` query
      TExceptions1PackageQuery(TMissingCatchHandlerInMainQuery())
  }

  Query catchAllEllipsisUsedInNonMainQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `catchAllEllipsisUsedInNonMain` query
      TExceptions1PackageQuery(TCatchAllEllipsisUsedInNonMainQuery())
  }

  Query useOfDynamicExceptionSpecificationQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `useOfDynamicExceptionSpecification` query
      TExceptions1PackageQuery(TUseOfDynamicExceptionSpecificationQuery())
  }

  Query noExceptFunctionThrowsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `noExceptFunctionThrows` query
      TExceptions1PackageQuery(TNoExceptFunctionThrowsQuery())
  }

  Query missingNoExceptQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `missingNoExcept` query
      TExceptions1PackageQuery(TMissingNoExceptQuery())
  }

  Query explicitAbruptTerminationAutosarQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `explicitAbruptTerminationAutosar` query
      TExceptions1PackageQuery(TExplicitAbruptTerminationAutosarQuery())
  }

  Query conditionVariablePostConditionFailedAutosarQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `conditionVariablePostConditionFailedAutosar` query
      TExceptions1PackageQuery(TConditionVariablePostConditionFailedAutosarQuery())
  }

  Query joinableThreadCopiedOrDestroyedAutosarQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `joinableThreadCopiedOrDestroyedAutosar` query
      TExceptions1PackageQuery(TJoinableThreadCopiedOrDestroyedAutosarQuery())
  }

  Query rethrowNestedWithoutCaptureAutosarQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `rethrowNestedWithoutCaptureAutosar` query
      TExceptions1PackageQuery(TRethrowNestedWithoutCaptureAutosarQuery())
  }

  Query exitHandlerThrowsExceptionAutosarQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `exitHandlerThrowsExceptionAutosar` query
      TExceptions1PackageQuery(TExitHandlerThrowsExceptionAutosarQuery())
  }

  Query gotoToCatchBlockQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `gotoToCatchBlock` query
      TExceptions1PackageQuery(TGotoToCatchBlockQuery())
  }

  Query switchToCatchBlockQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `switchToCatchBlock` query
      TExceptions1PackageQuery(TSwitchToCatchBlockQuery())
  }

  Query exceptionThrownDuringThrowQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `exceptionThrownDuringThrow` query
      TExceptions1PackageQuery(TExceptionThrownDuringThrowQuery())
  }

  Query nullThrownExplicitlyQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `nullThrownExplicitly` query
      TExceptions1PackageQuery(TNullThrownExplicitlyQuery())
  }

  Query emptyThrowOutsideCatchQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `emptyThrowOutsideCatch` query
      TExceptions1PackageQuery(TEmptyThrowOutsideCatchQuery())
  }

  Query catchAllExplicitlyThrownExceptionsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `catchAllExplicitlyThrownExceptions` query
      TExceptions1PackageQuery(TCatchAllExplicitlyThrownExceptionsQuery())
  }

  Query catchAllHandlerLastQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `catchAllHandlerLast` query
      TExceptions1PackageQuery(TCatchAllHandlerLastQuery())
  }

  Query conditionVariablePostConditionFailedCertQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `conditionVariablePostConditionFailedCert` query
      TExceptions1PackageQuery(TConditionVariablePostConditionFailedCertQuery())
  }

  Query joinableThreadCopiedOrDestroyedCertQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `joinableThreadCopiedOrDestroyedCert` query
      TExceptions1PackageQuery(TJoinableThreadCopiedOrDestroyedCertQuery())
  }

  Query rethrowNestedWithoutCaptureCertQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `rethrowNestedWithoutCaptureCert` query
      TExceptions1PackageQuery(TRethrowNestedWithoutCaptureCertQuery())
  }

  Query explicitAbruptTerminationCertQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `explicitAbruptTerminationCert` query
      TExceptions1PackageQuery(TExplicitAbruptTerminationCertQuery())
  }

  Query exitHandlerThrowsExceptionCertQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `exitHandlerThrowsExceptionCert` query
      TExceptions1PackageQuery(TExitHandlerThrowsExceptionCertQuery())
  }

  Query handleAllExceptionsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `handleAllExceptions` query
      TExceptions1PackageQuery(THandleAllExceptionsQuery())
  }

  Query destroyedValueReferencedInConstructorDestructorCatchBlockQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `destroyedValueReferencedInConstructorDestructorCatchBlock` query
      TExceptions1PackageQuery(TDestroyedValueReferencedInConstructorDestructorCatchBlockQuery())
  }

  Query honorExceptionSpecificationsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `honorExceptionSpecifications` query
      TExceptions1PackageQuery(THonorExceptionSpecificationsQuery())
  }

  Query handleAllExceptionsThrownBeforeMainBeginsExecutingQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `handleAllExceptionsThrownBeforeMainBeginsExecuting` query
      TExceptions1PackageQuery(THandleAllExceptionsThrownBeforeMainBeginsExecutingQuery())
  }

  Query exceptionObjectsMustBeNothrowCopyConstructibleQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `exceptionObjectsMustBeNothrowCopyConstructible` query
      TExceptions1PackageQuery(TExceptionObjectsMustBeNothrowCopyConstructibleQuery())
  }

  Query catchExceptionsByLvalueReferenceQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `catchExceptionsByLvalueReference` query
      TExceptions1PackageQuery(TCatchExceptionsByLvalueReferenceQuery())
  }
}
