//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  */
import cpp
import RuleMetadata

newtype LoopsQuery =
  TUnusedLoopCounterForContainerIterationQuery() or
  TMultipleLoopCountersQuery() or
  TFloatingPointLoopCounterQuery() or
  TDoStatementsShouldNotBeUsedQuery() or
  TForLoopInitializesNonLoopCounterQuery() or
  TForLoopModifiesNonLoopCounterQuery() or
  TNotEqualsInLoopConditionQuery() or
  TLoopCounterModifiedWithinConditionQuery() or
  TLoopCounterModifiedWithinStatementQuery() or
  TIrregularLoopCounterModificationQuery() or
  TLoopControlVariableModifiedInLoopConditionQuery() or
  TLoopControlVariableModifiedInLoopExpressionQuery() or
  TNonBooleanLoopControlVariableQuery()

predicate isLoopsQueryMetadata(Query query, string queryId, string ruleId) {
  query =
    // `Query` instance for the `unusedLoopCounterForContainerIteration` query
    LoopsPackage::unusedLoopCounterForContainerIterationQuery() and
  queryId =
    // `@id` for the `unusedLoopCounterForContainerIteration` query
    "cpp/autosar/unused-loop-counter-for-container-iteration" and
  ruleId = "A6-5-1"
  or
  query =
    // `Query` instance for the `multipleLoopCounters` query
    LoopsPackage::multipleLoopCountersQuery() and
  queryId =
    // `@id` for the `multipleLoopCounters` query
    "cpp/autosar/multiple-loop-counters" and
  ruleId = "A6-5-2"
  or
  query =
    // `Query` instance for the `floatingPointLoopCounter` query
    LoopsPackage::floatingPointLoopCounterQuery() and
  queryId =
    // `@id` for the `floatingPointLoopCounter` query
    "cpp/autosar/floating-point-loop-counter" and
  ruleId = "A6-5-2"
  or
  query =
    // `Query` instance for the `doStatementsShouldNotBeUsed` query
    LoopsPackage::doStatementsShouldNotBeUsedQuery() and
  queryId =
    // `@id` for the `doStatementsShouldNotBeUsed` query
    "cpp/autosar/do-statements-should-not-be-used" and
  ruleId = "A6-5-3"
  or
  query =
    // `Query` instance for the `forLoopInitializesNonLoopCounter` query
    LoopsPackage::forLoopInitializesNonLoopCounterQuery() and
  queryId =
    // `@id` for the `forLoopInitializesNonLoopCounter` query
    "cpp/autosar/for-loop-initializes-non-loop-counter" and
  ruleId = "A6-5-4"
  or
  query =
    // `Query` instance for the `forLoopModifiesNonLoopCounter` query
    LoopsPackage::forLoopModifiesNonLoopCounterQuery() and
  queryId =
    // `@id` for the `forLoopModifiesNonLoopCounter` query
    "cpp/autosar/for-loop-modifies-non-loop-counter" and
  ruleId = "A6-5-4"
  or
  query =
    // `Query` instance for the `notEqualsInLoopCondition` query
    LoopsPackage::notEqualsInLoopConditionQuery() and
  queryId =
    // `@id` for the `notEqualsInLoopCondition` query
    "cpp/autosar/not-equals-in-loop-condition" and
  ruleId = "M6-5-2"
  or
  query =
    // `Query` instance for the `loopCounterModifiedWithinCondition` query
    LoopsPackage::loopCounterModifiedWithinConditionQuery() and
  queryId =
    // `@id` for the `loopCounterModifiedWithinCondition` query
    "cpp/autosar/loop-counter-modified-within-condition" and
  ruleId = "M6-5-3"
  or
  query =
    // `Query` instance for the `loopCounterModifiedWithinStatement` query
    LoopsPackage::loopCounterModifiedWithinStatementQuery() and
  queryId =
    // `@id` for the `loopCounterModifiedWithinStatement` query
    "cpp/autosar/loop-counter-modified-within-statement" and
  ruleId = "M6-5-3"
  or
  query =
    // `Query` instance for the `irregularLoopCounterModification` query
    LoopsPackage::irregularLoopCounterModificationQuery() and
  queryId =
    // `@id` for the `irregularLoopCounterModification` query
    "cpp/autosar/irregular-loop-counter-modification" and
  ruleId = "M6-5-4"
  or
  query =
    // `Query` instance for the `loopControlVariableModifiedInLoopCondition` query
    LoopsPackage::loopControlVariableModifiedInLoopConditionQuery() and
  queryId =
    // `@id` for the `loopControlVariableModifiedInLoopCondition` query
    "cpp/autosar/loop-control-variable-modified-in-loop-condition" and
  ruleId = "M6-5-5"
  or
  query =
    // `Query` instance for the `loopControlVariableModifiedInLoopExpression` query
    LoopsPackage::loopControlVariableModifiedInLoopExpressionQuery() and
  queryId =
    // `@id` for the `loopControlVariableModifiedInLoopExpression` query
    "cpp/autosar/loop-control-variable-modified-in-loop-expression" and
  ruleId = "M6-5-5"
  or
  query =
    // `Query` instance for the `nonBooleanLoopControlVariable` query
    LoopsPackage::nonBooleanLoopControlVariableQuery() and
  queryId =
    // `@id` for the `nonBooleanLoopControlVariable` query
    "cpp/autosar/non-boolean-loop-control-variable" and
  ruleId = "M6-5-6"
}

module LoopsPackage {
  Query unusedLoopCounterForContainerIterationQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `unusedLoopCounterForContainerIteration` query
      TLoopsPackageQuery(TUnusedLoopCounterForContainerIterationQuery())
  }

  Query multipleLoopCountersQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `multipleLoopCounters` query
      TLoopsPackageQuery(TMultipleLoopCountersQuery())
  }

  Query floatingPointLoopCounterQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `floatingPointLoopCounter` query
      TLoopsPackageQuery(TFloatingPointLoopCounterQuery())
  }

  Query doStatementsShouldNotBeUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `doStatementsShouldNotBeUsed` query
      TLoopsPackageQuery(TDoStatementsShouldNotBeUsedQuery())
  }

  Query forLoopInitializesNonLoopCounterQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `forLoopInitializesNonLoopCounter` query
      TLoopsPackageQuery(TForLoopInitializesNonLoopCounterQuery())
  }

  Query forLoopModifiesNonLoopCounterQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `forLoopModifiesNonLoopCounter` query
      TLoopsPackageQuery(TForLoopModifiesNonLoopCounterQuery())
  }

  Query notEqualsInLoopConditionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `notEqualsInLoopCondition` query
      TLoopsPackageQuery(TNotEqualsInLoopConditionQuery())
  }

  Query loopCounterModifiedWithinConditionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `loopCounterModifiedWithinCondition` query
      TLoopsPackageQuery(TLoopCounterModifiedWithinConditionQuery())
  }

  Query loopCounterModifiedWithinStatementQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `loopCounterModifiedWithinStatement` query
      TLoopsPackageQuery(TLoopCounterModifiedWithinStatementQuery())
  }

  Query irregularLoopCounterModificationQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `irregularLoopCounterModification` query
      TLoopsPackageQuery(TIrregularLoopCounterModificationQuery())
  }

  Query loopControlVariableModifiedInLoopConditionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `loopControlVariableModifiedInLoopCondition` query
      TLoopsPackageQuery(TLoopControlVariableModifiedInLoopConditionQuery())
  }

  Query loopControlVariableModifiedInLoopExpressionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `loopControlVariableModifiedInLoopExpression` query
      TLoopsPackageQuery(TLoopControlVariableModifiedInLoopExpressionQuery())
  }

  Query nonBooleanLoopControlVariableQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `nonBooleanLoopControlVariable` query
      TLoopsPackageQuery(TNonBooleanLoopControlVariableQuery())
  }
}
