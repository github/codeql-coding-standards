//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype InvariantsQuery =
  TMemoryManagementFunctionInvariantsQuery() or
  TOrderingPredicatesInvariantsQuery() or
  TProvideAValidOrderingPredicateQuery() or
  TSignalHandlerMustBeAPlainOldFunctionQuery() or
  THonorTerminationReplacementHandlerRequirementsQuery() or
  THonorNewReplacementHandlerRequirementsQuery()

predicate isInvariantsQueryMetadata(Query query, string queryId, string ruleId) {
  query =
    // `Query` instance for the `memoryManagementFunctionInvariants` query
    InvariantsPackage::memoryManagementFunctionInvariantsQuery() and
  queryId =
    // `@id` for the `memoryManagementFunctionInvariants` query
    "cpp/autosar/memory-management-function-invariants" and
  ruleId = "A18-5-5"
  or
  query =
    // `Query` instance for the `orderingPredicatesInvariants` query
    InvariantsPackage::orderingPredicatesInvariantsQuery() and
  queryId =
    // `@id` for the `orderingPredicatesInvariants` query
    "cpp/autosar/ordering-predicates-invariants" and
  ruleId = "A25-4-1"
  or
  query =
    // `Query` instance for the `provideAValidOrderingPredicate` query
    InvariantsPackage::provideAValidOrderingPredicateQuery() and
  queryId =
    // `@id` for the `provideAValidOrderingPredicate` query
    "cpp/cert/provide-a-valid-ordering-predicate" and
  ruleId = "CTR57-CPP"
  or
  query =
    // `Query` instance for the `signalHandlerMustBeAPlainOldFunction` query
    InvariantsPackage::signalHandlerMustBeAPlainOldFunctionQuery() and
  queryId =
    // `@id` for the `signalHandlerMustBeAPlainOldFunction` query
    "cpp/cert/signal-handler-must-be-a-plain-old-function" and
  ruleId = "MSC54-CPP"
  or
  query =
    // `Query` instance for the `honorTerminationReplacementHandlerRequirements` query
    InvariantsPackage::honorTerminationReplacementHandlerRequirementsQuery() and
  queryId =
    // `@id` for the `honorTerminationReplacementHandlerRequirements` query
    "cpp/cert/honor-termination-replacement-handler-requirements" and
  ruleId = "OOP56-CPP"
  or
  query =
    // `Query` instance for the `honorNewReplacementHandlerRequirements` query
    InvariantsPackage::honorNewReplacementHandlerRequirementsQuery() and
  queryId =
    // `@id` for the `honorNewReplacementHandlerRequirements` query
    "cpp/cert/honor-new-replacement-handler-requirements" and
  ruleId = "OOP56-CPP"
}

module InvariantsPackage {
  Query memoryManagementFunctionInvariantsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `memoryManagementFunctionInvariants` query
      TQueryCPP(TInvariantsPackageQuery(TMemoryManagementFunctionInvariantsQuery()))
  }

  Query orderingPredicatesInvariantsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `orderingPredicatesInvariants` query
      TQueryCPP(TInvariantsPackageQuery(TOrderingPredicatesInvariantsQuery()))
  }

  Query provideAValidOrderingPredicateQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `provideAValidOrderingPredicate` query
      TQueryCPP(TInvariantsPackageQuery(TProvideAValidOrderingPredicateQuery()))
  }

  Query signalHandlerMustBeAPlainOldFunctionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `signalHandlerMustBeAPlainOldFunction` query
      TQueryCPP(TInvariantsPackageQuery(TSignalHandlerMustBeAPlainOldFunctionQuery()))
  }

  Query honorTerminationReplacementHandlerRequirementsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `honorTerminationReplacementHandlerRequirements` query
      TQueryCPP(TInvariantsPackageQuery(THonorTerminationReplacementHandlerRequirementsQuery()))
  }

  Query honorNewReplacementHandlerRequirementsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `honorNewReplacementHandlerRequirements` query
      TQueryCPP(TInvariantsPackageQuery(THonorNewReplacementHandlerRequirementsQuery()))
  }
}
