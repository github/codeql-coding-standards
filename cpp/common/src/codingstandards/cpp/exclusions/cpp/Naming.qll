//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype NamingQuery =
  TUserDefinedLiteralOperatorSuffixViolationQuery() or
  TIdentifierHidingQuery() or
  TIdentifierNameOfStaticNonMemberObjectReusedInNamespaceQuery() or
  TIdentifierNameOfStaticFunctionReusedInNamespaceQuery() or
  TIdentifierNameOfAStaticFunctionIsReusedQuery() or
  TIdentifierNameOfANonMemberObjectWithExternalOrInternalLinkageIsReusedQuery() or
  TClassOrEnumerationNameHiddenByAVariableInTheSameScopeQuery() or
  TClassOrEnumerationNameHiddenByAFunctionInTheSameScopeQuery() or
  TClassOrEnumerationNameHiddenByAnEnumeratorInTheSameScopeQuery() or
  TUniversalCharacterNamesUsedOutsideCharacterOrStringLiteralsQuery() or
  TCharacterOutsideTheLanguageStandardBasicSourceCharacterSetUsedInTheSourceCodeQuery() or
  TInvalidCharacterInStringLiteralQuery() or
  TInvalidCharacterInCommentQuery() or
  TNameOfStandardLibraryMacroOrObjectReusedQuery() or
  TNameOfStandardLibraryFunctionIsOverriddenQuery() or
  TDifferentIdentifiersNotTypographicallyUnambiguousQuery() or
  TIdentifierMainUsedForAFunctionOtherThanTheGlobalFunctionMainQuery() or
  TUnnamedNamespacesInHeaderFileQuery() or
  TNonIdenticalIdentifierUsedForTheParameterInReDeclarationOfAFunctionQuery() or
  TRedefiningOfStandardLibraryNameQuery() or
  TReuseOfReservedIdentifierQuery() or
  TUseOfSingleUnderscoreReservedPrefixQuery() or
  TUseOfDoubleUnderscoreReservedPrefixQuery() or
  TUseOfReservedLiteralSuffixIdentifierQuery() or
  TObjectReusesReservedNameQuery() or
  TFunctionReusesReservedNameQuery() or
  TEnumeratorReusesReservedNameQuery()

predicate isNamingQueryMetadata(Query query, string queryId, string ruleId) {
  query =
    // `Query` instance for the `userDefinedLiteralOperatorSuffixViolation` query
    NamingPackage::userDefinedLiteralOperatorSuffixViolationQuery() and
  queryId =
    // `@id` for the `userDefinedLiteralOperatorSuffixViolation` query
    "cpp/autosar/user-defined-literal-operator-suffix-violation" and
  ruleId = "A13-1-2"
  or
  query =
    // `Query` instance for the `identifierHiding` query
    NamingPackage::identifierHidingQuery() and
  queryId =
    // `@id` for the `identifierHiding` query
    "cpp/autosar/identifier-hiding" and
  ruleId = "A2-10-1"
  or
  query =
    // `Query` instance for the `identifierNameOfStaticNonMemberObjectReusedInNamespace` query
    NamingPackage::identifierNameOfStaticNonMemberObjectReusedInNamespaceQuery() and
  queryId =
    // `@id` for the `identifierNameOfStaticNonMemberObjectReusedInNamespace` query
    "cpp/autosar/identifier-name-of-static-non-member-object-reused-in-namespace" and
  ruleId = "A2-10-4"
  or
  query =
    // `Query` instance for the `identifierNameOfStaticFunctionReusedInNamespace` query
    NamingPackage::identifierNameOfStaticFunctionReusedInNamespaceQuery() and
  queryId =
    // `@id` for the `identifierNameOfStaticFunctionReusedInNamespace` query
    "cpp/autosar/identifier-name-of-static-function-reused-in-namespace" and
  ruleId = "A2-10-4"
  or
  query =
    // `Query` instance for the `identifierNameOfAStaticFunctionIsReused` query
    NamingPackage::identifierNameOfAStaticFunctionIsReusedQuery() and
  queryId =
    // `@id` for the `identifierNameOfAStaticFunctionIsReused` query
    "cpp/autosar/identifier-name-of-a-static-function-is-reused" and
  ruleId = "A2-10-5"
  or
  query =
    // `Query` instance for the `identifierNameOfANonMemberObjectWithExternalOrInternalLinkageIsReused` query
    NamingPackage::identifierNameOfANonMemberObjectWithExternalOrInternalLinkageIsReusedQuery() and
  queryId =
    // `@id` for the `identifierNameOfANonMemberObjectWithExternalOrInternalLinkageIsReused` query
    "cpp/autosar/identifier-name-of-a-non-member-object-with-external-or-internal-linkage-is-reused" and
  ruleId = "A2-10-5"
  or
  query =
    // `Query` instance for the `classOrEnumerationNameHiddenByAVariableInTheSameScope` query
    NamingPackage::classOrEnumerationNameHiddenByAVariableInTheSameScopeQuery() and
  queryId =
    // `@id` for the `classOrEnumerationNameHiddenByAVariableInTheSameScope` query
    "cpp/autosar/class-or-enumeration-name-hidden-by-a-variable-in-the-same-scope" and
  ruleId = "A2-10-6"
  or
  query =
    // `Query` instance for the `classOrEnumerationNameHiddenByAFunctionInTheSameScope` query
    NamingPackage::classOrEnumerationNameHiddenByAFunctionInTheSameScopeQuery() and
  queryId =
    // `@id` for the `classOrEnumerationNameHiddenByAFunctionInTheSameScope` query
    "cpp/autosar/class-or-enumeration-name-hidden-by-a-function-in-the-same-scope" and
  ruleId = "A2-10-6"
  or
  query =
    // `Query` instance for the `classOrEnumerationNameHiddenByAnEnumeratorInTheSameScope` query
    NamingPackage::classOrEnumerationNameHiddenByAnEnumeratorInTheSameScopeQuery() and
  queryId =
    // `@id` for the `classOrEnumerationNameHiddenByAnEnumeratorInTheSameScope` query
    "cpp/autosar/class-or-enumeration-name-hidden-by-an-enumerator-in-the-same-scope" and
  ruleId = "A2-10-6"
  or
  query =
    // `Query` instance for the `universalCharacterNamesUsedOutsideCharacterOrStringLiterals` query
    NamingPackage::universalCharacterNamesUsedOutsideCharacterOrStringLiteralsQuery() and
  queryId =
    // `@id` for the `universalCharacterNamesUsedOutsideCharacterOrStringLiterals` query
    "cpp/autosar/universal-character-names-used-outside-character-or-string-literals" and
  ruleId = "A2-13-6"
  or
  query =
    // `Query` instance for the `characterOutsideTheLanguageStandardBasicSourceCharacterSetUsedInTheSourceCode` query
    NamingPackage::characterOutsideTheLanguageStandardBasicSourceCharacterSetUsedInTheSourceCodeQuery() and
  queryId =
    // `@id` for the `characterOutsideTheLanguageStandardBasicSourceCharacterSetUsedInTheSourceCode` query
    "cpp/autosar/character-outside-the-language-standard-basic-source-character-set-used-in-the-source-code" and
  ruleId = "A2-3-1"
  or
  query =
    // `Query` instance for the `invalidCharacterInStringLiteral` query
    NamingPackage::invalidCharacterInStringLiteralQuery() and
  queryId =
    // `@id` for the `invalidCharacterInStringLiteral` query
    "cpp/autosar/invalid-character-in-string-literal" and
  ruleId = "A2-3-1"
  or
  query =
    // `Query` instance for the `invalidCharacterInComment` query
    NamingPackage::invalidCharacterInCommentQuery() and
  queryId =
    // `@id` for the `invalidCharacterInComment` query
    "cpp/autosar/invalid-character-in-comment" and
  ruleId = "A2-3-1"
  or
  query =
    // `Query` instance for the `nameOfStandardLibraryMacroOrObjectReused` query
    NamingPackage::nameOfStandardLibraryMacroOrObjectReusedQuery() and
  queryId =
    // `@id` for the `nameOfStandardLibraryMacroOrObjectReused` query
    "cpp/autosar/name-of-standard-library-macro-or-object-reused" and
  ruleId = "M17-0-2"
  or
  query =
    // `Query` instance for the `nameOfStandardLibraryFunctionIsOverridden` query
    NamingPackage::nameOfStandardLibraryFunctionIsOverriddenQuery() and
  queryId =
    // `@id` for the `nameOfStandardLibraryFunctionIsOverridden` query
    "cpp/autosar/name-of-standard-library-function-is-overridden" and
  ruleId = "M17-0-3"
  or
  query =
    // `Query` instance for the `differentIdentifiersNotTypographicallyUnambiguous` query
    NamingPackage::differentIdentifiersNotTypographicallyUnambiguousQuery() and
  queryId =
    // `@id` for the `differentIdentifiersNotTypographicallyUnambiguous` query
    "cpp/autosar/different-identifiers-not-typographically-unambiguous" and
  ruleId = "M2-10-1"
  or
  query =
    // `Query` instance for the `identifierMainUsedForAFunctionOtherThanTheGlobalFunctionMain` query
    NamingPackage::identifierMainUsedForAFunctionOtherThanTheGlobalFunctionMainQuery() and
  queryId =
    // `@id` for the `identifierMainUsedForAFunctionOtherThanTheGlobalFunctionMain` query
    "cpp/autosar/identifier-main-used-for-a-function-other-than-the-global-function-main" and
  ruleId = "M7-3-2"
  or
  query =
    // `Query` instance for the `unnamedNamespacesInHeaderFile` query
    NamingPackage::unnamedNamespacesInHeaderFileQuery() and
  queryId =
    // `@id` for the `unnamedNamespacesInHeaderFile` query
    "cpp/autosar/unnamed-namespaces-in-header-file" and
  ruleId = "M7-3-3"
  or
  query =
    // `Query` instance for the `nonIdenticalIdentifierUsedForTheParameterInReDeclarationOfAFunction` query
    NamingPackage::nonIdenticalIdentifierUsedForTheParameterInReDeclarationOfAFunctionQuery() and
  queryId =
    // `@id` for the `nonIdenticalIdentifierUsedForTheParameterInReDeclarationOfAFunction` query
    "cpp/autosar/non-identical-identifier-used-for-the-parameter-in-re-declaration-of-a-function" and
  ruleId = "M8-4-2"
  or
  query =
    // `Query` instance for the `redefiningOfStandardLibraryName` query
    NamingPackage::redefiningOfStandardLibraryNameQuery() and
  queryId =
    // `@id` for the `redefiningOfStandardLibraryName` query
    "cpp/cert/redefining-of-standard-library-name" and
  ruleId = "DCL51-CPP"
  or
  query =
    // `Query` instance for the `reuseOfReservedIdentifier` query
    NamingPackage::reuseOfReservedIdentifierQuery() and
  queryId =
    // `@id` for the `reuseOfReservedIdentifier` query
    "cpp/cert/reuse-of-reserved-identifier" and
  ruleId = "DCL51-CPP"
  or
  query =
    // `Query` instance for the `useOfSingleUnderscoreReservedPrefix` query
    NamingPackage::useOfSingleUnderscoreReservedPrefixQuery() and
  queryId =
    // `@id` for the `useOfSingleUnderscoreReservedPrefix` query
    "cpp/cert/use-of-single-underscore-reserved-prefix" and
  ruleId = "DCL51-CPP"
  or
  query =
    // `Query` instance for the `useOfDoubleUnderscoreReservedPrefix` query
    NamingPackage::useOfDoubleUnderscoreReservedPrefixQuery() and
  queryId =
    // `@id` for the `useOfDoubleUnderscoreReservedPrefix` query
    "cpp/cert/use-of-double-underscore-reserved-prefix" and
  ruleId = "DCL51-CPP"
  or
  query =
    // `Query` instance for the `useOfReservedLiteralSuffixIdentifier` query
    NamingPackage::useOfReservedLiteralSuffixIdentifierQuery() and
  queryId =
    // `@id` for the `useOfReservedLiteralSuffixIdentifier` query
    "cpp/cert/use-of-reserved-literal-suffix-identifier" and
  ruleId = "DCL51-CPP"
  or
  query =
    // `Query` instance for the `objectReusesReservedName` query
    NamingPackage::objectReusesReservedNameQuery() and
  queryId =
    // `@id` for the `objectReusesReservedName` query
    "cpp/cert/object-reuses-reserved-name" and
  ruleId = "DCL51-CPP"
  or
  query =
    // `Query` instance for the `functionReusesReservedName` query
    NamingPackage::functionReusesReservedNameQuery() and
  queryId =
    // `@id` for the `functionReusesReservedName` query
    "cpp/cert/function-reuses-reserved-name" and
  ruleId = "DCL51-CPP"
  or
  query =
    // `Query` instance for the `enumeratorReusesReservedName` query
    NamingPackage::enumeratorReusesReservedNameQuery() and
  queryId =
    // `@id` for the `enumeratorReusesReservedName` query
    "cpp/cert/enumerator-reuses-reserved-name" and
  ruleId = "DCL51-CPP"
}

module NamingPackage {
  Query userDefinedLiteralOperatorSuffixViolationQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `userDefinedLiteralOperatorSuffixViolation` query
      TQueryCPP(TNamingPackageQuery(TUserDefinedLiteralOperatorSuffixViolationQuery()))
  }

  Query identifierHidingQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `identifierHiding` query
      TQueryCPP(TNamingPackageQuery(TIdentifierHidingQuery()))
  }

  Query identifierNameOfStaticNonMemberObjectReusedInNamespaceQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `identifierNameOfStaticNonMemberObjectReusedInNamespace` query
      TQueryCPP(TNamingPackageQuery(TIdentifierNameOfStaticNonMemberObjectReusedInNamespaceQuery()))
  }

  Query identifierNameOfStaticFunctionReusedInNamespaceQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `identifierNameOfStaticFunctionReusedInNamespace` query
      TQueryCPP(TNamingPackageQuery(TIdentifierNameOfStaticFunctionReusedInNamespaceQuery()))
  }

  Query identifierNameOfAStaticFunctionIsReusedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `identifierNameOfAStaticFunctionIsReused` query
      TQueryCPP(TNamingPackageQuery(TIdentifierNameOfAStaticFunctionIsReusedQuery()))
  }

  Query identifierNameOfANonMemberObjectWithExternalOrInternalLinkageIsReusedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `identifierNameOfANonMemberObjectWithExternalOrInternalLinkageIsReused` query
      TQueryCPP(TNamingPackageQuery(TIdentifierNameOfANonMemberObjectWithExternalOrInternalLinkageIsReusedQuery()))
  }

  Query classOrEnumerationNameHiddenByAVariableInTheSameScopeQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `classOrEnumerationNameHiddenByAVariableInTheSameScope` query
      TQueryCPP(TNamingPackageQuery(TClassOrEnumerationNameHiddenByAVariableInTheSameScopeQuery()))
  }

  Query classOrEnumerationNameHiddenByAFunctionInTheSameScopeQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `classOrEnumerationNameHiddenByAFunctionInTheSameScope` query
      TQueryCPP(TNamingPackageQuery(TClassOrEnumerationNameHiddenByAFunctionInTheSameScopeQuery()))
  }

  Query classOrEnumerationNameHiddenByAnEnumeratorInTheSameScopeQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `classOrEnumerationNameHiddenByAnEnumeratorInTheSameScope` query
      TQueryCPP(TNamingPackageQuery(TClassOrEnumerationNameHiddenByAnEnumeratorInTheSameScopeQuery()))
  }

  Query universalCharacterNamesUsedOutsideCharacterOrStringLiteralsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `universalCharacterNamesUsedOutsideCharacterOrStringLiterals` query
      TQueryCPP(TNamingPackageQuery(TUniversalCharacterNamesUsedOutsideCharacterOrStringLiteralsQuery()))
  }

  Query characterOutsideTheLanguageStandardBasicSourceCharacterSetUsedInTheSourceCodeQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `characterOutsideTheLanguageStandardBasicSourceCharacterSetUsedInTheSourceCode` query
      TQueryCPP(TNamingPackageQuery(TCharacterOutsideTheLanguageStandardBasicSourceCharacterSetUsedInTheSourceCodeQuery()))
  }

  Query invalidCharacterInStringLiteralQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `invalidCharacterInStringLiteral` query
      TQueryCPP(TNamingPackageQuery(TInvalidCharacterInStringLiteralQuery()))
  }

  Query invalidCharacterInCommentQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `invalidCharacterInComment` query
      TQueryCPP(TNamingPackageQuery(TInvalidCharacterInCommentQuery()))
  }

  Query nameOfStandardLibraryMacroOrObjectReusedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `nameOfStandardLibraryMacroOrObjectReused` query
      TQueryCPP(TNamingPackageQuery(TNameOfStandardLibraryMacroOrObjectReusedQuery()))
  }

  Query nameOfStandardLibraryFunctionIsOverriddenQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `nameOfStandardLibraryFunctionIsOverridden` query
      TQueryCPP(TNamingPackageQuery(TNameOfStandardLibraryFunctionIsOverriddenQuery()))
  }

  Query differentIdentifiersNotTypographicallyUnambiguousQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `differentIdentifiersNotTypographicallyUnambiguous` query
      TQueryCPP(TNamingPackageQuery(TDifferentIdentifiersNotTypographicallyUnambiguousQuery()))
  }

  Query identifierMainUsedForAFunctionOtherThanTheGlobalFunctionMainQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `identifierMainUsedForAFunctionOtherThanTheGlobalFunctionMain` query
      TQueryCPP(TNamingPackageQuery(TIdentifierMainUsedForAFunctionOtherThanTheGlobalFunctionMainQuery()))
  }

  Query unnamedNamespacesInHeaderFileQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `unnamedNamespacesInHeaderFile` query
      TQueryCPP(TNamingPackageQuery(TUnnamedNamespacesInHeaderFileQuery()))
  }

  Query nonIdenticalIdentifierUsedForTheParameterInReDeclarationOfAFunctionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `nonIdenticalIdentifierUsedForTheParameterInReDeclarationOfAFunction` query
      TQueryCPP(TNamingPackageQuery(TNonIdenticalIdentifierUsedForTheParameterInReDeclarationOfAFunctionQuery()))
  }

  Query redefiningOfStandardLibraryNameQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `redefiningOfStandardLibraryName` query
      TQueryCPP(TNamingPackageQuery(TRedefiningOfStandardLibraryNameQuery()))
  }

  Query reuseOfReservedIdentifierQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `reuseOfReservedIdentifier` query
      TQueryCPP(TNamingPackageQuery(TReuseOfReservedIdentifierQuery()))
  }

  Query useOfSingleUnderscoreReservedPrefixQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `useOfSingleUnderscoreReservedPrefix` query
      TQueryCPP(TNamingPackageQuery(TUseOfSingleUnderscoreReservedPrefixQuery()))
  }

  Query useOfDoubleUnderscoreReservedPrefixQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `useOfDoubleUnderscoreReservedPrefix` query
      TQueryCPP(TNamingPackageQuery(TUseOfDoubleUnderscoreReservedPrefixQuery()))
  }

  Query useOfReservedLiteralSuffixIdentifierQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `useOfReservedLiteralSuffixIdentifier` query
      TQueryCPP(TNamingPackageQuery(TUseOfReservedLiteralSuffixIdentifierQuery()))
  }

  Query objectReusesReservedNameQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `objectReusesReservedName` query
      TQueryCPP(TNamingPackageQuery(TObjectReusesReservedNameQuery()))
  }

  Query functionReusesReservedNameQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `functionReusesReservedName` query
      TQueryCPP(TNamingPackageQuery(TFunctionReusesReservedNameQuery()))
  }

  Query enumeratorReusesReservedNameQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `enumeratorReusesReservedName` query
      TQueryCPP(TNamingPackageQuery(TEnumeratorReusesReservedNameQuery()))
  }
}
