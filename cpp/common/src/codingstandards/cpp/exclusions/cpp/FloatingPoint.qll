//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype FloatingPointQuery =
  TPossibleMisuseOfInfiniteFloatingPointValueQuery() or
  TPossibleMisuseOfNaNFloatingPointValueQuery()

predicate isFloatingPointQueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `possibleMisuseOfInfiniteFloatingPointValue` query
    FloatingPointPackage::possibleMisuseOfInfiniteFloatingPointValueQuery() and
  queryId =
    // `@id` for the `possibleMisuseOfInfiniteFloatingPointValue` query
    "cpp/misra/possible-misuse-of-infinite-floating-point-value" and
  ruleId = "DIR-0-3-1" and
  category = "advisory"
  or
  query =
    // `Query` instance for the `possibleMisuseOfNaNFloatingPointValue` query
    FloatingPointPackage::possibleMisuseOfNaNFloatingPointValueQuery() and
  queryId =
    // `@id` for the `possibleMisuseOfNaNFloatingPointValue` query
    "cpp/misra/possible-misuse-of-nan-floating-point-value" and
  ruleId = "DIR-0-3-1" and
  category = "advisory"
}

module FloatingPointPackage {
  Query possibleMisuseOfInfiniteFloatingPointValueQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `possibleMisuseOfInfiniteFloatingPointValue` query
      TQueryCPP(TFloatingPointPackageQuery(TPossibleMisuseOfInfiniteFloatingPointValueQuery()))
  }

  Query possibleMisuseOfNaNFloatingPointValueQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `possibleMisuseOfNaNFloatingPointValue` query
      TQueryCPP(TFloatingPointPackageQuery(TPossibleMisuseOfNaNFloatingPointValueQuery()))
  }
}
