//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype Conversions2Query =
  TVirtualBaseClassCastToDerivedQuery() or
  TNoCStyleOrFunctionalCastsQuery() or
  TIntToPointerCastProhibitedQuery() or
  TNoPointerToIntegralCastQuery() or
  TPointerToIntegralCastQuery() or
  TNoStandaloneTypeCastExpressionQuery()

predicate isConversions2QueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `virtualBaseClassCastToDerived` query
    Conversions2Package::virtualBaseClassCastToDerivedQuery() and
  queryId =
    // `@id` for the `virtualBaseClassCastToDerived` query
    "cpp/misra/virtual-base-class-cast-to-derived" and
  ruleId = "RULE-8-2-1" and
  category = "required"
  or
  query =
    // `Query` instance for the `noCStyleOrFunctionalCasts` query
    Conversions2Package::noCStyleOrFunctionalCastsQuery() and
  queryId =
    // `@id` for the `noCStyleOrFunctionalCasts` query
    "cpp/misra/no-c-style-or-functional-casts" and
  ruleId = "RULE-8-2-2" and
  category = "required"
  or
  query =
    // `Query` instance for the `intToPointerCastProhibited` query
    Conversions2Package::intToPointerCastProhibitedQuery() and
  queryId =
    // `@id` for the `intToPointerCastProhibited` query
    "cpp/misra/int-to-pointer-cast-prohibited" and
  ruleId = "RULE-8-2-6" and
  category = "required"
  or
  query =
    // `Query` instance for the `noPointerToIntegralCast` query
    Conversions2Package::noPointerToIntegralCastQuery() and
  queryId =
    // `@id` for the `noPointerToIntegralCast` query
    "cpp/misra/no-pointer-to-integral-cast" and
  ruleId = "RULE-8-2-7" and
  category = "advisory"
  or
  query =
    // `Query` instance for the `pointerToIntegralCast` query
    Conversions2Package::pointerToIntegralCastQuery() and
  queryId =
    // `@id` for the `pointerToIntegralCast` query
    "cpp/misra/pointer-to-integral-cast" and
  ruleId = "RULE-8-2-8" and
  category = "required"
  or
  query =
    // `Query` instance for the `noStandaloneTypeCastExpression` query
    Conversions2Package::noStandaloneTypeCastExpressionQuery() and
  queryId =
    // `@id` for the `noStandaloneTypeCastExpression` query
    "cpp/misra/no-standalone-type-cast-expression" and
  ruleId = "RULE-9-2-1" and
  category = "required"
}

module Conversions2Package {
  Query virtualBaseClassCastToDerivedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `virtualBaseClassCastToDerived` query
      TQueryCPP(TConversions2PackageQuery(TVirtualBaseClassCastToDerivedQuery()))
  }

  Query noCStyleOrFunctionalCastsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `noCStyleOrFunctionalCasts` query
      TQueryCPP(TConversions2PackageQuery(TNoCStyleOrFunctionalCastsQuery()))
  }

  Query intToPointerCastProhibitedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `intToPointerCastProhibited` query
      TQueryCPP(TConversions2PackageQuery(TIntToPointerCastProhibitedQuery()))
  }

  Query noPointerToIntegralCastQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `noPointerToIntegralCast` query
      TQueryCPP(TConversions2PackageQuery(TNoPointerToIntegralCastQuery()))
  }

  Query pointerToIntegralCastQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `pointerToIntegralCast` query
      TQueryCPP(TConversions2PackageQuery(TPointerToIntegralCastQuery()))
  }

  Query noStandaloneTypeCastExpressionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `noStandaloneTypeCastExpression` query
      TQueryCPP(TConversions2PackageQuery(TNoStandaloneTypeCastExpressionQuery()))
  }
}
