//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype Exceptions3Query =
  TMissingCatchAllExceptionHandlerInMainQuery() or
  TClassExceptionCaughtByValueQuery() or
  TExceptionUnfriendlyFunctionMustBeNoexceptQuery()

predicate isExceptions3QueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `missingCatchAllExceptionHandlerInMain` query
    Exceptions3Package::missingCatchAllExceptionHandlerInMainQuery() and
  queryId =
    // `@id` for the `missingCatchAllExceptionHandlerInMain` query
    "cpp/misra/missing-catch-all-exception-handler-in-main" and
  ruleId = "RULE-18-3-1" and
  category = "advisory"
  or
  query =
    // `Query` instance for the `classExceptionCaughtByValue` query
    Exceptions3Package::classExceptionCaughtByValueQuery() and
  queryId =
    // `@id` for the `classExceptionCaughtByValue` query
    "cpp/misra/class-exception-caught-by-value" and
  ruleId = "RULE-18-3-2" and
  category = "required"
  or
  query =
    // `Query` instance for the `exceptionUnfriendlyFunctionMustBeNoexcept` query
    Exceptions3Package::exceptionUnfriendlyFunctionMustBeNoexceptQuery() and
  queryId =
    // `@id` for the `exceptionUnfriendlyFunctionMustBeNoexcept` query
    "cpp/misra/exception-unfriendly-function-must-be-noexcept" and
  ruleId = "RULE-18-4-1" and
  category = "required"
}

module Exceptions3Package {
  Query missingCatchAllExceptionHandlerInMainQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `missingCatchAllExceptionHandlerInMain` query
      TQueryCPP(TExceptions3PackageQuery(TMissingCatchAllExceptionHandlerInMainQuery()))
  }

  Query classExceptionCaughtByValueQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `classExceptionCaughtByValue` query
      TQueryCPP(TExceptions3PackageQuery(TClassExceptionCaughtByValueQuery()))
  }

  Query exceptionUnfriendlyFunctionMustBeNoexceptQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `exceptionUnfriendlyFunctionMustBeNoexcept` query
      TQueryCPP(TExceptions3PackageQuery(TExceptionUnfriendlyFunctionMustBeNoexceptQuery()))
  }
}
