//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype BannedFunctionsQuery =
  TFunctionsMallocCallocReallocAndFreeUsedQuery() or
  TBindUsedQuery() or
  TPseudorandomNumbersGeneratedUsingRandQuery() or
  TSetjmpMacroAndTheLongjmpFunctionUsedQuery() or
  TLibraryFunctionsAbortExitGetenvAndSystemFromLibraryCstdlibUsedQuery() or
  TTimeHandlingFunctionsOfLibraryCtimeUsedQuery() or
  TUnboundedFunctionsOfLibraryCstringUsedQuery() or
  TMacroOffsetofUsedQuery() or
  TDoNotUseSetjmpOrLongjmpQuery() or
  TDoNotUseRandForGeneratingPseudorandomNumbersQuery() or
  TPreferSpecialMemberFunctionsAndOverloadedOperatorsToCStandardLibraryFunctionsQuery()

predicate isBannedFunctionsQueryMetadata(Query query, string queryId, string ruleId) {
  query =
    // `Query` instance for the `functionsMallocCallocReallocAndFreeUsed` query
    BannedFunctionsPackage::functionsMallocCallocReallocAndFreeUsedQuery() and
  queryId =
    // `@id` for the `functionsMallocCallocReallocAndFreeUsed` query
    "cpp/autosar/functions-malloc-calloc-realloc-and-free-used" and
  ruleId = "A18-5-1"
  or
  query =
    // `Query` instance for the `bindUsed` query
    BannedFunctionsPackage::bindUsedQuery() and
  queryId =
    // `@id` for the `bindUsed` query
    "cpp/autosar/bind-used" and
  ruleId = "A18-9-1"
  or
  query =
    // `Query` instance for the `pseudorandomNumbersGeneratedUsingRand` query
    BannedFunctionsPackage::pseudorandomNumbersGeneratedUsingRandQuery() and
  queryId =
    // `@id` for the `pseudorandomNumbersGeneratedUsingRand` query
    "cpp/autosar/pseudorandom-numbers-generated-using-rand" and
  ruleId = "A26-5-1"
  or
  query =
    // `Query` instance for the `setjmpMacroAndTheLongjmpFunctionUsed` query
    BannedFunctionsPackage::setjmpMacroAndTheLongjmpFunctionUsedQuery() and
  queryId =
    // `@id` for the `setjmpMacroAndTheLongjmpFunctionUsed` query
    "cpp/autosar/setjmp-macro-and-the-longjmp-function-used" and
  ruleId = "M17-0-5"
  or
  query =
    // `Query` instance for the `libraryFunctionsAbortExitGetenvAndSystemFromLibraryCstdlibUsed` query
    BannedFunctionsPackage::libraryFunctionsAbortExitGetenvAndSystemFromLibraryCstdlibUsedQuery() and
  queryId =
    // `@id` for the `libraryFunctionsAbortExitGetenvAndSystemFromLibraryCstdlibUsed` query
    "cpp/autosar/library-functions-abort-exit-getenv-and-system-from-library-cstdlib-used" and
  ruleId = "M18-0-3"
  or
  query =
    // `Query` instance for the `timeHandlingFunctionsOfLibraryCtimeUsed` query
    BannedFunctionsPackage::timeHandlingFunctionsOfLibraryCtimeUsedQuery() and
  queryId =
    // `@id` for the `timeHandlingFunctionsOfLibraryCtimeUsed` query
    "cpp/autosar/time-handling-functions-of-library-ctime-used" and
  ruleId = "M18-0-4"
  or
  query =
    // `Query` instance for the `unboundedFunctionsOfLibraryCstringUsed` query
    BannedFunctionsPackage::unboundedFunctionsOfLibraryCstringUsedQuery() and
  queryId =
    // `@id` for the `unboundedFunctionsOfLibraryCstringUsed` query
    "cpp/autosar/unbounded-functions-of-library-cstring-used" and
  ruleId = "M18-0-5"
  or
  query =
    // `Query` instance for the `macroOffsetofUsed` query
    BannedFunctionsPackage::macroOffsetofUsedQuery() and
  queryId =
    // `@id` for the `macroOffsetofUsed` query
    "cpp/autosar/macro-offsetof-used" and
  ruleId = "M18-2-1"
  or
  query =
    // `Query` instance for the `doNotUseSetjmpOrLongjmp` query
    BannedFunctionsPackage::doNotUseSetjmpOrLongjmpQuery() and
  queryId =
    // `@id` for the `doNotUseSetjmpOrLongjmp` query
    "cpp/cert/do-not-use-setjmp-or-longjmp" and
  ruleId = "ERR52-CPP"
  or
  query =
    // `Query` instance for the `doNotUseRandForGeneratingPseudorandomNumbers` query
    BannedFunctionsPackage::doNotUseRandForGeneratingPseudorandomNumbersQuery() and
  queryId =
    // `@id` for the `doNotUseRandForGeneratingPseudorandomNumbers` query
    "cpp/cert/do-not-use-rand-for-generating-pseudorandom-numbers" and
  ruleId = "MSC50-CPP"
  or
  query =
    // `Query` instance for the `preferSpecialMemberFunctionsAndOverloadedOperatorsToCStandardLibraryFunctions` query
    BannedFunctionsPackage::preferSpecialMemberFunctionsAndOverloadedOperatorsToCStandardLibraryFunctionsQuery() and
  queryId =
    // `@id` for the `preferSpecialMemberFunctionsAndOverloadedOperatorsToCStandardLibraryFunctions` query
    "cpp/cert/prefer-special-member-functions-and-overloaded-operators-to-c-standard-library-functions" and
  ruleId = "OOP57-CPP"
}

module BannedFunctionsPackage {
  Query functionsMallocCallocReallocAndFreeUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `functionsMallocCallocReallocAndFreeUsed` query
      TQueryCPP(TBannedFunctionsPackageQuery(TFunctionsMallocCallocReallocAndFreeUsedQuery()))
  }

  Query bindUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `bindUsed` query
      TQueryCPP(TBannedFunctionsPackageQuery(TBindUsedQuery()))
  }

  Query pseudorandomNumbersGeneratedUsingRandQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `pseudorandomNumbersGeneratedUsingRand` query
      TQueryCPP(TBannedFunctionsPackageQuery(TPseudorandomNumbersGeneratedUsingRandQuery()))
  }

  Query setjmpMacroAndTheLongjmpFunctionUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `setjmpMacroAndTheLongjmpFunctionUsed` query
      TQueryCPP(TBannedFunctionsPackageQuery(TSetjmpMacroAndTheLongjmpFunctionUsedQuery()))
  }

  Query libraryFunctionsAbortExitGetenvAndSystemFromLibraryCstdlibUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `libraryFunctionsAbortExitGetenvAndSystemFromLibraryCstdlibUsed` query
      TQueryCPP(TBannedFunctionsPackageQuery(TLibraryFunctionsAbortExitGetenvAndSystemFromLibraryCstdlibUsedQuery()))
  }

  Query timeHandlingFunctionsOfLibraryCtimeUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `timeHandlingFunctionsOfLibraryCtimeUsed` query
      TQueryCPP(TBannedFunctionsPackageQuery(TTimeHandlingFunctionsOfLibraryCtimeUsedQuery()))
  }

  Query unboundedFunctionsOfLibraryCstringUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `unboundedFunctionsOfLibraryCstringUsed` query
      TQueryCPP(TBannedFunctionsPackageQuery(TUnboundedFunctionsOfLibraryCstringUsedQuery()))
  }

  Query macroOffsetofUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `macroOffsetofUsed` query
      TQueryCPP(TBannedFunctionsPackageQuery(TMacroOffsetofUsedQuery()))
  }

  Query doNotUseSetjmpOrLongjmpQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `doNotUseSetjmpOrLongjmp` query
      TQueryCPP(TBannedFunctionsPackageQuery(TDoNotUseSetjmpOrLongjmpQuery()))
  }

  Query doNotUseRandForGeneratingPseudorandomNumbersQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `doNotUseRandForGeneratingPseudorandomNumbers` query
      TQueryCPP(TBannedFunctionsPackageQuery(TDoNotUseRandForGeneratingPseudorandomNumbersQuery()))
  }

  Query preferSpecialMemberFunctionsAndOverloadedOperatorsToCStandardLibraryFunctionsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `preferSpecialMemberFunctionsAndOverloadedOperatorsToCStandardLibraryFunctions` query
      TQueryCPP(TBannedFunctionsPackageQuery(TPreferSpecialMemberFunctionsAndOverloadedOperatorsToCStandardLibraryFunctionsQuery()))
  }
}
