//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype ClassesQuery =
  TNonPodTypeShouldBeDefinedAsClassQuery() or
  TTypeDefinedAsStructHasOnlyPublicDataMembersQuery() or
  TTypeDefinedAsStructHasNoMethodsQuery() or
  TTypeDefinedAsStructIsNotBaseOfOtherClassOrStructQuery() or
  TTypeDefinedAsStructIsDoesNotInheritFromStructOrClassQuery() or
  TMissingSpecialMemberFunctionQuery() or
  TClassDataMembersInitializationConditionQuery() or
  TRedundantMemberFunctionsShouldBeDefaultedOrLeftUndefinedQuery() or
  TNonTemplateMemberDefinedInTemplateQuery() or
  TTrivialOrTemplateFunctionDefinedOutsideClassDefinitionQuery() or
  TNonTrivialNonTemplateFunctionDefinedInsideClassDefinitionQuery() or
  TInParametersForNotCheapToCopyTypesNotPassedByReferenceQuery() or
  TInParametersForCheapToCopyTypesNotPassedByValueQuery() or
  TReturnsNonConstRawPointersOrReferencesToPrivateOrProtectedDataQuery() or
  TDataTypesUsedForInterfacingWithHardwareOrProtocolsMustBeTrivialAndStandardLayoutQuery() or
  TDataTypesUsedForInterfacingWithHardwareOrProtocolsMustContainOnlyDefinedDataTypeSizesQuery() or
  TMemberDataInNonPodClassTypesNotPrivateQuery() or
  TOffsetUsedOnInvalidTypeOrMemberQuery()

predicate isClassesQueryMetadata(Query query, string queryId, string ruleId) {
  query =
    // `Query` instance for the `nonPodTypeShouldBeDefinedAsClass` query
    ClassesPackage::nonPodTypeShouldBeDefinedAsClassQuery() and
  queryId =
    // `@id` for the `nonPodTypeShouldBeDefinedAsClass` query
    "cpp/autosar/non-pod-type-should-be-defined-as-class" and
  ruleId = "A11-0-1"
  or
  query =
    // `Query` instance for the `typeDefinedAsStructHasOnlyPublicDataMembers` query
    ClassesPackage::typeDefinedAsStructHasOnlyPublicDataMembersQuery() and
  queryId =
    // `@id` for the `typeDefinedAsStructHasOnlyPublicDataMembers` query
    "cpp/autosar/type-defined-as-struct-has-only-public-data-members" and
  ruleId = "A11-0-2"
  or
  query =
    // `Query` instance for the `typeDefinedAsStructHasNoMethods` query
    ClassesPackage::typeDefinedAsStructHasNoMethodsQuery() and
  queryId =
    // `@id` for the `typeDefinedAsStructHasNoMethods` query
    "cpp/autosar/type-defined-as-struct-has-no-methods" and
  ruleId = "A11-0-2"
  or
  query =
    // `Query` instance for the `typeDefinedAsStructIsNotBaseOfOtherClassOrStruct` query
    ClassesPackage::typeDefinedAsStructIsNotBaseOfOtherClassOrStructQuery() and
  queryId =
    // `@id` for the `typeDefinedAsStructIsNotBaseOfOtherClassOrStruct` query
    "cpp/autosar/type-defined-as-struct-is-not-base-of-other-class-or-struct" and
  ruleId = "A11-0-2"
  or
  query =
    // `Query` instance for the `typeDefinedAsStructIsDoesNotInheritFromStructOrClass` query
    ClassesPackage::typeDefinedAsStructIsDoesNotInheritFromStructOrClassQuery() and
  queryId =
    // `@id` for the `typeDefinedAsStructIsDoesNotInheritFromStructOrClass` query
    "cpp/autosar/type-defined-as-struct-is-does-not-inherit-from-struct-or-class" and
  ruleId = "A11-0-2"
  or
  query =
    // `Query` instance for the `missingSpecialMemberFunction` query
    ClassesPackage::missingSpecialMemberFunctionQuery() and
  queryId =
    // `@id` for the `missingSpecialMemberFunction` query
    "cpp/autosar/missing-special-member-function" and
  ruleId = "A12-0-1"
  or
  query =
    // `Query` instance for the `classDataMembersInitializationCondition` query
    ClassesPackage::classDataMembersInitializationConditionQuery() and
  queryId =
    // `@id` for the `classDataMembersInitializationCondition` query
    "cpp/autosar/class-data-members-initialization-condition" and
  ruleId = "A12-6-1"
  or
  query =
    // `Query` instance for the `redundantMemberFunctionsShouldBeDefaultedOrLeftUndefined` query
    ClassesPackage::redundantMemberFunctionsShouldBeDefaultedOrLeftUndefinedQuery() and
  queryId =
    // `@id` for the `redundantMemberFunctionsShouldBeDefaultedOrLeftUndefined` query
    "cpp/autosar/redundant-member-functions-should-be-defaulted-or-left-undefined" and
  ruleId = "A12-7-1"
  or
  query =
    // `Query` instance for the `nonTemplateMemberDefinedInTemplate` query
    ClassesPackage::nonTemplateMemberDefinedInTemplateQuery() and
  queryId =
    // `@id` for the `nonTemplateMemberDefinedInTemplate` query
    "cpp/autosar/non-template-member-defined-in-template" and
  ruleId = "A14-5-2"
  or
  query =
    // `Query` instance for the `trivialOrTemplateFunctionDefinedOutsideClassDefinition` query
    ClassesPackage::trivialOrTemplateFunctionDefinedOutsideClassDefinitionQuery() and
  queryId =
    // `@id` for the `trivialOrTemplateFunctionDefinedOutsideClassDefinition` query
    "cpp/autosar/trivial-or-template-function-defined-outside-class-definition" and
  ruleId = "A3-1-5"
  or
  query =
    // `Query` instance for the `nonTrivialNonTemplateFunctionDefinedInsideClassDefinition` query
    ClassesPackage::nonTrivialNonTemplateFunctionDefinedInsideClassDefinitionQuery() and
  queryId =
    // `@id` for the `nonTrivialNonTemplateFunctionDefinedInsideClassDefinition` query
    "cpp/autosar/non-trivial-non-template-function-defined-inside-class-definition" and
  ruleId = "A3-1-5"
  or
  query =
    // `Query` instance for the `inParametersForNotCheapToCopyTypesNotPassedByReference` query
    ClassesPackage::inParametersForNotCheapToCopyTypesNotPassedByReferenceQuery() and
  queryId =
    // `@id` for the `inParametersForNotCheapToCopyTypesNotPassedByReference` query
    "cpp/autosar/in-parameters-for-not-cheap-to-copy-types-not-passed-by-reference" and
  ruleId = "A8-4-7"
  or
  query =
    // `Query` instance for the `inParametersForCheapToCopyTypesNotPassedByValue` query
    ClassesPackage::inParametersForCheapToCopyTypesNotPassedByValueQuery() and
  queryId =
    // `@id` for the `inParametersForCheapToCopyTypesNotPassedByValue` query
    "cpp/autosar/in-parameters-for-cheap-to-copy-types-not-passed-by-value" and
  ruleId = "A8-4-7"
  or
  query =
    // `Query` instance for the `returnsNonConstRawPointersOrReferencesToPrivateOrProtectedData` query
    ClassesPackage::returnsNonConstRawPointersOrReferencesToPrivateOrProtectedDataQuery() and
  queryId =
    // `@id` for the `returnsNonConstRawPointersOrReferencesToPrivateOrProtectedData` query
    "cpp/autosar/returns-non-const-raw-pointers-or-references-to-private-or-protected-data" and
  ruleId = "A9-3-1"
  or
  query =
    // `Query` instance for the `dataTypesUsedForInterfacingWithHardwareOrProtocolsMustBeTrivialAndStandardLayout` query
    ClassesPackage::dataTypesUsedForInterfacingWithHardwareOrProtocolsMustBeTrivialAndStandardLayoutQuery() and
  queryId =
    // `@id` for the `dataTypesUsedForInterfacingWithHardwareOrProtocolsMustBeTrivialAndStandardLayout` query
    "cpp/autosar/data-types-used-for-interfacing-with-hardware-or-protocols-must-be-trivial-and-standard-layout" and
  ruleId = "A9-6-1"
  or
  query =
    // `Query` instance for the `dataTypesUsedForInterfacingWithHardwareOrProtocolsMustContainOnlyDefinedDataTypeSizes` query
    ClassesPackage::dataTypesUsedForInterfacingWithHardwareOrProtocolsMustContainOnlyDefinedDataTypeSizesQuery() and
  queryId =
    // `@id` for the `dataTypesUsedForInterfacingWithHardwareOrProtocolsMustContainOnlyDefinedDataTypeSizes` query
    "cpp/autosar/data-types-used-for-interfacing-with-hardware-or-protocols-must-contain-only-defined-data-type-sizes" and
  ruleId = "A9-6-1"
  or
  query =
    // `Query` instance for the `memberDataInNonPodClassTypesNotPrivate` query
    ClassesPackage::memberDataInNonPodClassTypesNotPrivateQuery() and
  queryId =
    // `@id` for the `memberDataInNonPodClassTypesNotPrivate` query
    "cpp/autosar/member-data-in-non-pod-class-types-not-private" and
  ruleId = "M11-0-1"
  or
  query =
    // `Query` instance for the `offsetUsedOnInvalidTypeOrMember` query
    ClassesPackage::offsetUsedOnInvalidTypeOrMemberQuery() and
  queryId =
    // `@id` for the `offsetUsedOnInvalidTypeOrMember` query
    "cpp/cert/offset-used-on-invalid-type-or-member" and
  ruleId = "EXP59-CPP"
}

module ClassesPackage {
  Query nonPodTypeShouldBeDefinedAsClassQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `nonPodTypeShouldBeDefinedAsClass` query
      TQueryCPP(TClassesPackageQuery(TNonPodTypeShouldBeDefinedAsClassQuery()))
  }

  Query typeDefinedAsStructHasOnlyPublicDataMembersQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `typeDefinedAsStructHasOnlyPublicDataMembers` query
      TQueryCPP(TClassesPackageQuery(TTypeDefinedAsStructHasOnlyPublicDataMembersQuery()))
  }

  Query typeDefinedAsStructHasNoMethodsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `typeDefinedAsStructHasNoMethods` query
      TQueryCPP(TClassesPackageQuery(TTypeDefinedAsStructHasNoMethodsQuery()))
  }

  Query typeDefinedAsStructIsNotBaseOfOtherClassOrStructQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `typeDefinedAsStructIsNotBaseOfOtherClassOrStruct` query
      TQueryCPP(TClassesPackageQuery(TTypeDefinedAsStructIsNotBaseOfOtherClassOrStructQuery()))
  }

  Query typeDefinedAsStructIsDoesNotInheritFromStructOrClassQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `typeDefinedAsStructIsDoesNotInheritFromStructOrClass` query
      TQueryCPP(TClassesPackageQuery(TTypeDefinedAsStructIsDoesNotInheritFromStructOrClassQuery()))
  }

  Query missingSpecialMemberFunctionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `missingSpecialMemberFunction` query
      TQueryCPP(TClassesPackageQuery(TMissingSpecialMemberFunctionQuery()))
  }

  Query classDataMembersInitializationConditionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `classDataMembersInitializationCondition` query
      TQueryCPP(TClassesPackageQuery(TClassDataMembersInitializationConditionQuery()))
  }

  Query redundantMemberFunctionsShouldBeDefaultedOrLeftUndefinedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `redundantMemberFunctionsShouldBeDefaultedOrLeftUndefined` query
      TQueryCPP(TClassesPackageQuery(TRedundantMemberFunctionsShouldBeDefaultedOrLeftUndefinedQuery()))
  }

  Query nonTemplateMemberDefinedInTemplateQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `nonTemplateMemberDefinedInTemplate` query
      TQueryCPP(TClassesPackageQuery(TNonTemplateMemberDefinedInTemplateQuery()))
  }

  Query trivialOrTemplateFunctionDefinedOutsideClassDefinitionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `trivialOrTemplateFunctionDefinedOutsideClassDefinition` query
      TQueryCPP(TClassesPackageQuery(TTrivialOrTemplateFunctionDefinedOutsideClassDefinitionQuery()))
  }

  Query nonTrivialNonTemplateFunctionDefinedInsideClassDefinitionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `nonTrivialNonTemplateFunctionDefinedInsideClassDefinition` query
      TQueryCPP(TClassesPackageQuery(TNonTrivialNonTemplateFunctionDefinedInsideClassDefinitionQuery()))
  }

  Query inParametersForNotCheapToCopyTypesNotPassedByReferenceQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `inParametersForNotCheapToCopyTypesNotPassedByReference` query
      TQueryCPP(TClassesPackageQuery(TInParametersForNotCheapToCopyTypesNotPassedByReferenceQuery()))
  }

  Query inParametersForCheapToCopyTypesNotPassedByValueQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `inParametersForCheapToCopyTypesNotPassedByValue` query
      TQueryCPP(TClassesPackageQuery(TInParametersForCheapToCopyTypesNotPassedByValueQuery()))
  }

  Query returnsNonConstRawPointersOrReferencesToPrivateOrProtectedDataQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `returnsNonConstRawPointersOrReferencesToPrivateOrProtectedData` query
      TQueryCPP(TClassesPackageQuery(TReturnsNonConstRawPointersOrReferencesToPrivateOrProtectedDataQuery()))
  }

  Query dataTypesUsedForInterfacingWithHardwareOrProtocolsMustBeTrivialAndStandardLayoutQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `dataTypesUsedForInterfacingWithHardwareOrProtocolsMustBeTrivialAndStandardLayout` query
      TQueryCPP(TClassesPackageQuery(TDataTypesUsedForInterfacingWithHardwareOrProtocolsMustBeTrivialAndStandardLayoutQuery()))
  }

  Query dataTypesUsedForInterfacingWithHardwareOrProtocolsMustContainOnlyDefinedDataTypeSizesQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `dataTypesUsedForInterfacingWithHardwareOrProtocolsMustContainOnlyDefinedDataTypeSizes` query
      TQueryCPP(TClassesPackageQuery(TDataTypesUsedForInterfacingWithHardwareOrProtocolsMustContainOnlyDefinedDataTypeSizesQuery()))
  }

  Query memberDataInNonPodClassTypesNotPrivateQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `memberDataInNonPodClassTypesNotPrivate` query
      TQueryCPP(TClassesPackageQuery(TMemberDataInNonPodClassTypesNotPrivateQuery()))
  }

  Query offsetUsedOnInvalidTypeOrMemberQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `offsetUsedOnInvalidTypeOrMember` query
      TQueryCPP(TClassesPackageQuery(TOffsetUsedOnInvalidTypeOrMemberQuery()))
  }
}
