//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype Exceptions2Query =
  TOnlyThrowStdExceptionDerivedTypesQuery() or
  TConstructorErrorLeavesObjectInInvalidStateQuery() or
  TClassTypeExceptionNotCaughtByReferenceQuery() or
  TIncompatibleNoexceptSpecificationQuery() or
  TInconsistentNoexceptFalseSpecificationQuery() or
  TInconsistentNoexceptTrueSpecificationQuery() or
  TIncompatibleNoexceptSpecificationForOverridersQuery() or
  TMissingCheckedExceptionsQuery() or
  TInconsistentCheckedExceptionsQuery() or
  TSpecialFunctionExitsWithExceptionQuery() or
  TSpecialFunctionMissingNoExceptSpecificationQuery() or
  TExceptionRaisedDuringStartupQuery() or
  TExceptionRaisedDuringTerminationQuery() or
  TDestroyedValueReferencedInDestructorCatchBlockQuery() or
  TCatchBlockShadowingMisraQuery() or
  TDoNotLetExceptionsEscapeFromDestructorsOrDeallocationFunctionsQuery() or
  TCatchBlockShadowingCertQuery()

predicate isExceptions2QueryMetadata(Query query, string queryId, string ruleId) {
  query =
    // `Query` instance for the `onlyThrowStdExceptionDerivedTypes` query
    Exceptions2Package::onlyThrowStdExceptionDerivedTypesQuery() and
  queryId =
    // `@id` for the `onlyThrowStdExceptionDerivedTypes` query
    "cpp/autosar/only-throw-std-exception-derived-types" and
  ruleId = "A15-1-1"
  or
  query =
    // `Query` instance for the `constructorErrorLeavesObjectInInvalidState` query
    Exceptions2Package::constructorErrorLeavesObjectInInvalidStateQuery() and
  queryId =
    // `@id` for the `constructorErrorLeavesObjectInInvalidState` query
    "cpp/autosar/constructor-error-leaves-object-in-invalid-state" and
  ruleId = "A15-2-2"
  or
  query =
    // `Query` instance for the `classTypeExceptionNotCaughtByReference` query
    Exceptions2Package::classTypeExceptionNotCaughtByReferenceQuery() and
  queryId =
    // `@id` for the `classTypeExceptionNotCaughtByReference` query
    "cpp/autosar/class-type-exception-not-caught-by-reference" and
  ruleId = "A15-3-5"
  or
  query =
    // `Query` instance for the `incompatibleNoexceptSpecification` query
    Exceptions2Package::incompatibleNoexceptSpecificationQuery() and
  queryId =
    // `@id` for the `incompatibleNoexceptSpecification` query
    "cpp/autosar/incompatible-noexcept-specification" and
  ruleId = "A15-4-3"
  or
  query =
    // `Query` instance for the `inconsistentNoexceptFalseSpecification` query
    Exceptions2Package::inconsistentNoexceptFalseSpecificationQuery() and
  queryId =
    // `@id` for the `inconsistentNoexceptFalseSpecification` query
    "cpp/autosar/inconsistent-noexcept-false-specification" and
  ruleId = "A15-4-3"
  or
  query =
    // `Query` instance for the `inconsistentNoexceptTrueSpecification` query
    Exceptions2Package::inconsistentNoexceptTrueSpecificationQuery() and
  queryId =
    // `@id` for the `inconsistentNoexceptTrueSpecification` query
    "cpp/autosar/inconsistent-noexcept-true-specification" and
  ruleId = "A15-4-3"
  or
  query =
    // `Query` instance for the `incompatibleNoexceptSpecificationForOverriders` query
    Exceptions2Package::incompatibleNoexceptSpecificationForOverridersQuery() and
  queryId =
    // `@id` for the `incompatibleNoexceptSpecificationForOverriders` query
    "cpp/autosar/incompatible-noexcept-specification-for-overriders" and
  ruleId = "A15-4-3"
  or
  query =
    // `Query` instance for the `missingCheckedExceptions` query
    Exceptions2Package::missingCheckedExceptionsQuery() and
  queryId =
    // `@id` for the `missingCheckedExceptions` query
    "cpp/autosar/missing-checked-exceptions" and
  ruleId = "A15-4-5"
  or
  query =
    // `Query` instance for the `inconsistentCheckedExceptions` query
    Exceptions2Package::inconsistentCheckedExceptionsQuery() and
  queryId =
    // `@id` for the `inconsistentCheckedExceptions` query
    "cpp/autosar/inconsistent-checked-exceptions" and
  ruleId = "A15-4-5"
  or
  query =
    // `Query` instance for the `specialFunctionExitsWithException` query
    Exceptions2Package::specialFunctionExitsWithExceptionQuery() and
  queryId =
    // `@id` for the `specialFunctionExitsWithException` query
    "cpp/autosar/special-function-exits-with-exception" and
  ruleId = "A15-5-1"
  or
  query =
    // `Query` instance for the `specialFunctionMissingNoExceptSpecification` query
    Exceptions2Package::specialFunctionMissingNoExceptSpecificationQuery() and
  queryId =
    // `@id` for the `specialFunctionMissingNoExceptSpecification` query
    "cpp/autosar/special-function-missing-no-except-specification" and
  ruleId = "A15-5-1"
  or
  query =
    // `Query` instance for the `exceptionRaisedDuringStartup` query
    Exceptions2Package::exceptionRaisedDuringStartupQuery() and
  queryId =
    // `@id` for the `exceptionRaisedDuringStartup` query
    "cpp/autosar/exception-raised-during-startup" and
  ruleId = "M15-3-1"
  or
  query =
    // `Query` instance for the `exceptionRaisedDuringTermination` query
    Exceptions2Package::exceptionRaisedDuringTerminationQuery() and
  queryId =
    // `@id` for the `exceptionRaisedDuringTermination` query
    "cpp/autosar/exception-raised-during-termination" and
  ruleId = "M15-3-1"
  or
  query =
    // `Query` instance for the `destroyedValueReferencedInDestructorCatchBlock` query
    Exceptions2Package::destroyedValueReferencedInDestructorCatchBlockQuery() and
  queryId =
    // `@id` for the `destroyedValueReferencedInDestructorCatchBlock` query
    "cpp/autosar/destroyed-value-referenced-in-destructor-catch-block" and
  ruleId = "M15-3-3"
  or
  query =
    // `Query` instance for the `catchBlockShadowingMisra` query
    Exceptions2Package::catchBlockShadowingMisraQuery() and
  queryId =
    // `@id` for the `catchBlockShadowingMisra` query
    "cpp/autosar/catch-block-shadowing-misra" and
  ruleId = "M15-3-6"
  or
  query =
    // `Query` instance for the `doNotLetExceptionsEscapeFromDestructorsOrDeallocationFunctions` query
    Exceptions2Package::doNotLetExceptionsEscapeFromDestructorsOrDeallocationFunctionsQuery() and
  queryId =
    // `@id` for the `doNotLetExceptionsEscapeFromDestructorsOrDeallocationFunctions` query
    "cpp/cert/do-not-let-exceptions-escape-from-destructors-or-deallocation-functions" and
  ruleId = "DCL57-CPP"
  or
  query =
    // `Query` instance for the `catchBlockShadowingCert` query
    Exceptions2Package::catchBlockShadowingCertQuery() and
  queryId =
    // `@id` for the `catchBlockShadowingCert` query
    "cpp/cert/catch-block-shadowing-cert" and
  ruleId = "ERR54-CPP"
}

module Exceptions2Package {
  Query onlyThrowStdExceptionDerivedTypesQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `onlyThrowStdExceptionDerivedTypes` query
      TQueryCPP(TExceptions2PackageQuery(TOnlyThrowStdExceptionDerivedTypesQuery()))
  }

  Query constructorErrorLeavesObjectInInvalidStateQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `constructorErrorLeavesObjectInInvalidState` query
      TQueryCPP(TExceptions2PackageQuery(TConstructorErrorLeavesObjectInInvalidStateQuery()))
  }

  Query classTypeExceptionNotCaughtByReferenceQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `classTypeExceptionNotCaughtByReference` query
      TQueryCPP(TExceptions2PackageQuery(TClassTypeExceptionNotCaughtByReferenceQuery()))
  }

  Query incompatibleNoexceptSpecificationQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `incompatibleNoexceptSpecification` query
      TQueryCPP(TExceptions2PackageQuery(TIncompatibleNoexceptSpecificationQuery()))
  }

  Query inconsistentNoexceptFalseSpecificationQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `inconsistentNoexceptFalseSpecification` query
      TQueryCPP(TExceptions2PackageQuery(TInconsistentNoexceptFalseSpecificationQuery()))
  }

  Query inconsistentNoexceptTrueSpecificationQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `inconsistentNoexceptTrueSpecification` query
      TQueryCPP(TExceptions2PackageQuery(TInconsistentNoexceptTrueSpecificationQuery()))
  }

  Query incompatibleNoexceptSpecificationForOverridersQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `incompatibleNoexceptSpecificationForOverriders` query
      TQueryCPP(TExceptions2PackageQuery(TIncompatibleNoexceptSpecificationForOverridersQuery()))
  }

  Query missingCheckedExceptionsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `missingCheckedExceptions` query
      TQueryCPP(TExceptions2PackageQuery(TMissingCheckedExceptionsQuery()))
  }

  Query inconsistentCheckedExceptionsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `inconsistentCheckedExceptions` query
      TQueryCPP(TExceptions2PackageQuery(TInconsistentCheckedExceptionsQuery()))
  }

  Query specialFunctionExitsWithExceptionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `specialFunctionExitsWithException` query
      TQueryCPP(TExceptions2PackageQuery(TSpecialFunctionExitsWithExceptionQuery()))
  }

  Query specialFunctionMissingNoExceptSpecificationQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `specialFunctionMissingNoExceptSpecification` query
      TQueryCPP(TExceptions2PackageQuery(TSpecialFunctionMissingNoExceptSpecificationQuery()))
  }

  Query exceptionRaisedDuringStartupQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `exceptionRaisedDuringStartup` query
      TQueryCPP(TExceptions2PackageQuery(TExceptionRaisedDuringStartupQuery()))
  }

  Query exceptionRaisedDuringTerminationQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `exceptionRaisedDuringTermination` query
      TQueryCPP(TExceptions2PackageQuery(TExceptionRaisedDuringTerminationQuery()))
  }

  Query destroyedValueReferencedInDestructorCatchBlockQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `destroyedValueReferencedInDestructorCatchBlock` query
      TQueryCPP(TExceptions2PackageQuery(TDestroyedValueReferencedInDestructorCatchBlockQuery()))
  }

  Query catchBlockShadowingMisraQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `catchBlockShadowingMisra` query
      TQueryCPP(TExceptions2PackageQuery(TCatchBlockShadowingMisraQuery()))
  }

  Query doNotLetExceptionsEscapeFromDestructorsOrDeallocationFunctionsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `doNotLetExceptionsEscapeFromDestructorsOrDeallocationFunctions` query
      TQueryCPP(TExceptions2PackageQuery(TDoNotLetExceptionsEscapeFromDestructorsOrDeallocationFunctionsQuery()))
  }

  Query catchBlockShadowingCertQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `catchBlockShadowingCert` query
      TQueryCPP(TExceptions2PackageQuery(TCatchBlockShadowingCertQuery()))
  }
}
