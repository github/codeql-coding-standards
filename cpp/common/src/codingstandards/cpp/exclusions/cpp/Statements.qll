//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype StatementsQuery =
  TAppropriateStructureOfSwitchStatementQuery() or
  TLegacyForStatementsShouldBeSimpleQuery() or
  TForRangeInitializerAtMostOneFunctionCallQuery()

predicate isStatementsQueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `appropriateStructureOfSwitchStatement` query
    StatementsPackage::appropriateStructureOfSwitchStatementQuery() and
  queryId =
    // `@id` for the `appropriateStructureOfSwitchStatement` query
    "cpp/misra/appropriate-structure-of-switch-statement" and
  ruleId = "RULE-9-4-2" and
  category = "required"
  or
  query =
    // `Query` instance for the `legacyForStatementsShouldBeSimple` query
    StatementsPackage::legacyForStatementsShouldBeSimpleQuery() and
  queryId =
    // `@id` for the `legacyForStatementsShouldBeSimple` query
    "cpp/misra/legacy-for-statements-should-be-simple" and
  ruleId = "RULE-9-5-1" and
  category = "advisory"
  or
  query =
    // `Query` instance for the `forRangeInitializerAtMostOneFunctionCall` query
    StatementsPackage::forRangeInitializerAtMostOneFunctionCallQuery() and
  queryId =
    // `@id` for the `forRangeInitializerAtMostOneFunctionCall` query
    "cpp/misra/for-range-initializer-at-most-one-function-call" and
  ruleId = "RULE-9-5-2" and
  category = "required"
}

module StatementsPackage {
  Query appropriateStructureOfSwitchStatementQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `appropriateStructureOfSwitchStatement` query
      TQueryCPP(TStatementsPackageQuery(TAppropriateStructureOfSwitchStatementQuery()))
  }

  Query legacyForStatementsShouldBeSimpleQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `legacyForStatementsShouldBeSimple` query
      TQueryCPP(TStatementsPackageQuery(TLegacyForStatementsShouldBeSimpleQuery()))
  }

  Query forRangeInitializerAtMostOneFunctionCallQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `forRangeInitializerAtMostOneFunctionCall` query
      TQueryCPP(TStatementsPackageQuery(TForRangeInitializerAtMostOneFunctionCallQuery()))
  }
}
