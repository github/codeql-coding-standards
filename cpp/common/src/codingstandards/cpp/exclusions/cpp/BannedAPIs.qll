//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype BannedAPIsQuery =
  TAvoidProgramTerminatingFunctionsQuery() or
  TNoVariadicFunctionMacrosQuery() or
  TNoCsetjmpHeaderQuery() or
  TUnsafeStringHandlingFunctionsQuery() or
  TBannedSystemFunctionQuery() or
  TUseSmartPtrFactoryFunctionsQuery() or
  TCharacterHandlingFunctionRestrictionsQuery() or
  TNoMemoryFunctionsFromCStringQuery() or
  TLocaleGlobalFunctionNotAllowedQuery() or
  TAvoidStandardIntegerTypeNamesQuery()

predicate isBannedAPIsQueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `avoidProgramTerminatingFunctions` query
    BannedAPIsPackage::avoidProgramTerminatingFunctionsQuery() and
  queryId =
    // `@id` for the `avoidProgramTerminatingFunctions` query
    "cpp/misra/avoid-program-terminating-functions" and
  ruleId = "RULE-18-5-2" and
  category = "advisory"
  or
  query =
    // `Query` instance for the `noVariadicFunctionMacros` query
    BannedAPIsPackage::noVariadicFunctionMacrosQuery() and
  queryId =
    // `@id` for the `noVariadicFunctionMacros` query
    "cpp/misra/no-variadic-function-macros" and
  ruleId = "RULE-21-10-1" and
  category = "required"
  or
  query =
    // `Query` instance for the `noCsetjmpHeader` query
    BannedAPIsPackage::noCsetjmpHeaderQuery() and
  queryId =
    // `@id` for the `noCsetjmpHeader` query
    "cpp/misra/no-csetjmp-header" and
  ruleId = "RULE-21-10-2" and
  category = "required"
  or
  query =
    // `Query` instance for the `unsafeStringHandlingFunctions` query
    BannedAPIsPackage::unsafeStringHandlingFunctionsQuery() and
  queryId =
    // `@id` for the `unsafeStringHandlingFunctions` query
    "cpp/misra/unsafe-string-handling-functions" and
  ruleId = "RULE-21-2-2" and
  category = "required"
  or
  query =
    // `Query` instance for the `bannedSystemFunction` query
    BannedAPIsPackage::bannedSystemFunctionQuery() and
  queryId =
    // `@id` for the `bannedSystemFunction` query
    "cpp/misra/banned-system-function" and
  ruleId = "RULE-21-2-3" and
  category = "required"
  or
  query =
    // `Query` instance for the `useSmartPtrFactoryFunctions` query
    BannedAPIsPackage::useSmartPtrFactoryFunctionsQuery() and
  queryId =
    // `@id` for the `useSmartPtrFactoryFunctions` query
    "cpp/misra/use-smart-ptr-factory-functions" and
  ruleId = "RULE-23-11-1" and
  category = "advisory"
  or
  query =
    // `Query` instance for the `characterHandlingFunctionRestrictions` query
    BannedAPIsPackage::characterHandlingFunctionRestrictionsQuery() and
  queryId =
    // `@id` for the `characterHandlingFunctionRestrictions` query
    "cpp/misra/character-handling-function-restrictions" and
  ruleId = "RULE-24-5-1" and
  category = "required"
  or
  query =
    // `Query` instance for the `noMemoryFunctionsFromCString` query
    BannedAPIsPackage::noMemoryFunctionsFromCStringQuery() and
  queryId =
    // `@id` for the `noMemoryFunctionsFromCString` query
    "cpp/misra/no-memory-functions-from-c-string" and
  ruleId = "RULE-24-5-2" and
  category = "required"
  or
  query =
    // `Query` instance for the `localeGlobalFunctionNotAllowed` query
    BannedAPIsPackage::localeGlobalFunctionNotAllowedQuery() and
  queryId =
    // `@id` for the `localeGlobalFunctionNotAllowed` query
    "cpp/misra/locale-global-function-not-allowed" and
  ruleId = "RULE-25-5-1" and
  category = "required"
  or
  query =
    // `Query` instance for the `avoidStandardIntegerTypeNames` query
    BannedAPIsPackage::avoidStandardIntegerTypeNamesQuery() and
  queryId =
    // `@id` for the `avoidStandardIntegerTypeNames` query
    "cpp/misra/avoid-standard-integer-type-names" and
  ruleId = "RULE-6-9-2" and
  category = "advisory"
}

module BannedAPIsPackage {
  Query avoidProgramTerminatingFunctionsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `avoidProgramTerminatingFunctions` query
      TQueryCPP(TBannedAPIsPackageQuery(TAvoidProgramTerminatingFunctionsQuery()))
  }

  Query noVariadicFunctionMacrosQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `noVariadicFunctionMacros` query
      TQueryCPP(TBannedAPIsPackageQuery(TNoVariadicFunctionMacrosQuery()))
  }

  Query noCsetjmpHeaderQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `noCsetjmpHeader` query
      TQueryCPP(TBannedAPIsPackageQuery(TNoCsetjmpHeaderQuery()))
  }

  Query unsafeStringHandlingFunctionsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `unsafeStringHandlingFunctions` query
      TQueryCPP(TBannedAPIsPackageQuery(TUnsafeStringHandlingFunctionsQuery()))
  }

  Query bannedSystemFunctionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `bannedSystemFunction` query
      TQueryCPP(TBannedAPIsPackageQuery(TBannedSystemFunctionQuery()))
  }

  Query useSmartPtrFactoryFunctionsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `useSmartPtrFactoryFunctions` query
      TQueryCPP(TBannedAPIsPackageQuery(TUseSmartPtrFactoryFunctionsQuery()))
  }

  Query characterHandlingFunctionRestrictionsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `characterHandlingFunctionRestrictions` query
      TQueryCPP(TBannedAPIsPackageQuery(TCharacterHandlingFunctionRestrictionsQuery()))
  }

  Query noMemoryFunctionsFromCStringQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `noMemoryFunctionsFromCString` query
      TQueryCPP(TBannedAPIsPackageQuery(TNoMemoryFunctionsFromCStringQuery()))
  }

  Query localeGlobalFunctionNotAllowedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `localeGlobalFunctionNotAllowed` query
      TQueryCPP(TBannedAPIsPackageQuery(TLocaleGlobalFunctionNotAllowedQuery()))
  }

  Query avoidStandardIntegerTypeNamesQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `avoidStandardIntegerTypeNames` query
      TQueryCPP(TBannedAPIsPackageQuery(TAvoidStandardIntegerTypeNamesQuery()))
  }
}
