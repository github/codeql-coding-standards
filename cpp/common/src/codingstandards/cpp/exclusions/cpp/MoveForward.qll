//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype MoveForwardQuery =
  TMovedFromObjectReadAccessedQuery() or
  TForwardingValuesToOtherFunctionsQuery() or
  TMoveUsedOnConstObjectsQuery() or
  TArgumentToForwardSubsequentlyUsedQuery() or
  TMoveFromConsumeParametersRvalRefQuery() or
  TForwardForwardingReferencesQuery() or
  TDoNotRelyOnTheValueOfAMovedFromObjectQuery()

predicate isMoveForwardQueryMetadata(Query query, string queryId, string ruleId) {
  query =
    // `Query` instance for the `movedFromObjectReadAccessed` query
    MoveForwardPackage::movedFromObjectReadAccessedQuery() and
  queryId =
    // `@id` for the `movedFromObjectReadAccessed` query
    "cpp/autosar/moved-from-object-read-accessed" and
  ruleId = "A12-8-3"
  or
  query =
    // `Query` instance for the `forwardingValuesToOtherFunctions` query
    MoveForwardPackage::forwardingValuesToOtherFunctionsQuery() and
  queryId =
    // `@id` for the `forwardingValuesToOtherFunctions` query
    "cpp/autosar/forwarding-values-to-other-functions" and
  ruleId = "A18-9-2"
  or
  query =
    // `Query` instance for the `moveUsedOnConstObjects` query
    MoveForwardPackage::moveUsedOnConstObjectsQuery() and
  queryId =
    // `@id` for the `moveUsedOnConstObjects` query
    "cpp/autosar/move-used-on-const-objects" and
  ruleId = "A18-9-3"
  or
  query =
    // `Query` instance for the `argumentToForwardSubsequentlyUsed` query
    MoveForwardPackage::argumentToForwardSubsequentlyUsedQuery() and
  queryId =
    // `@id` for the `argumentToForwardSubsequentlyUsed` query
    "cpp/autosar/argument-to-forward-subsequently-used" and
  ruleId = "A18-9-4"
  or
  query =
    // `Query` instance for the `moveFromConsumeParametersRvalRef` query
    MoveForwardPackage::moveFromConsumeParametersRvalRefQuery() and
  queryId =
    // `@id` for the `moveFromConsumeParametersRvalRef` query
    "cpp/autosar/move-from-consume-parameters-rval-ref" and
  ruleId = "A8-4-5"
  or
  query =
    // `Query` instance for the `forwardForwardingReferences` query
    MoveForwardPackage::forwardForwardingReferencesQuery() and
  queryId =
    // `@id` for the `forwardForwardingReferences` query
    "cpp/autosar/forward-forwarding-references" and
  ruleId = "A8-4-6"
  or
  query =
    // `Query` instance for the `doNotRelyOnTheValueOfAMovedFromObject` query
    MoveForwardPackage::doNotRelyOnTheValueOfAMovedFromObjectQuery() and
  queryId =
    // `@id` for the `doNotRelyOnTheValueOfAMovedFromObject` query
    "cpp/cert/do-not-rely-on-the-value-of-a-moved-from-object" and
  ruleId = "EXP63-CPP"
}

module MoveForwardPackage {
  Query movedFromObjectReadAccessedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `movedFromObjectReadAccessed` query
      TQueryCPP(TMoveForwardPackageQuery(TMovedFromObjectReadAccessedQuery()))
  }

  Query forwardingValuesToOtherFunctionsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `forwardingValuesToOtherFunctions` query
      TQueryCPP(TMoveForwardPackageQuery(TForwardingValuesToOtherFunctionsQuery()))
  }

  Query moveUsedOnConstObjectsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `moveUsedOnConstObjects` query
      TQueryCPP(TMoveForwardPackageQuery(TMoveUsedOnConstObjectsQuery()))
  }

  Query argumentToForwardSubsequentlyUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `argumentToForwardSubsequentlyUsed` query
      TQueryCPP(TMoveForwardPackageQuery(TArgumentToForwardSubsequentlyUsedQuery()))
  }

  Query moveFromConsumeParametersRvalRefQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `moveFromConsumeParametersRvalRef` query
      TQueryCPP(TMoveForwardPackageQuery(TMoveFromConsumeParametersRvalRefQuery()))
  }

  Query forwardForwardingReferencesQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `forwardForwardingReferences` query
      TQueryCPP(TMoveForwardPackageQuery(TForwardForwardingReferencesQuery()))
  }

  Query doNotRelyOnTheValueOfAMovedFromObjectQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `doNotRelyOnTheValueOfAMovedFromObject` query
      TQueryCPP(TMoveForwardPackageQuery(TDoNotRelyOnTheValueOfAMovedFromObjectQuery()))
  }
}
