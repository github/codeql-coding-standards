//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  */
import cpp
import RuleMetadata

newtype StringsQuery =
  TStringLiteralsAssignedToNonConstantPointersQuery() or
  TBasicStringMayNotBeNullTerminatedAutosarQuery() or
  TOperationMayNotNullTerminateCStyleStringAutosarQuery() or
  TCStyleStringsUsedQuery() or
  TPlainCharTypeShallOnlyBeUsedForTheStorageAndUseOfCharacterValuesQuery() or
  TSignedCharAndUnsignedCharTypeShallOnlyBeUsedForTheStorageAndUseOfNumericValuesQuery() or
  TBasicStringMayNotBeNullTerminatedCertQuery() or
  TOperationMayNotNullTerminateCStyleStringCertQuery()

predicate isStringsQueryMetadata(Query query, string queryId, string ruleId) {
  query =
    // `Query` instance for the `stringLiteralsAssignedToNonConstantPointers` query
    StringsPackage::stringLiteralsAssignedToNonConstantPointersQuery() and
  queryId =
    // `@id` for the `stringLiteralsAssignedToNonConstantPointers` query
    "cpp/autosar/string-literals-assigned-to-non-constant-pointers" and
  ruleId = "A2-13-4"
  or
  query =
    // `Query` instance for the `basicStringMayNotBeNullTerminatedAutosar` query
    StringsPackage::basicStringMayNotBeNullTerminatedAutosarQuery() and
  queryId =
    // `@id` for the `basicStringMayNotBeNullTerminatedAutosar` query
    "cpp/autosar/basic-string-may-not-be-null-terminated-autosar" and
  ruleId = "A27-0-2"
  or
  query =
    // `Query` instance for the `operationMayNotNullTerminateCStyleStringAutosar` query
    StringsPackage::operationMayNotNullTerminateCStyleStringAutosarQuery() and
  queryId =
    // `@id` for the `operationMayNotNullTerminateCStyleStringAutosar` query
    "cpp/autosar/operation-may-not-null-terminate-c-style-string-autosar" and
  ruleId = "A27-0-2"
  or
  query =
    // `Query` instance for the `cStyleStringsUsed` query
    StringsPackage::cStyleStringsUsedQuery() and
  queryId =
    // `@id` for the `cStyleStringsUsed` query
    "cpp/autosar/c-style-strings-used" and
  ruleId = "A27-0-4"
  or
  query =
    // `Query` instance for the `plainCharTypeShallOnlyBeUsedForTheStorageAndUseOfCharacterValues` query
    StringsPackage::plainCharTypeShallOnlyBeUsedForTheStorageAndUseOfCharacterValuesQuery() and
  queryId =
    // `@id` for the `plainCharTypeShallOnlyBeUsedForTheStorageAndUseOfCharacterValues` query
    "cpp/autosar/plain-char-type-shall-only-be-used-for-the-storage-and-use-of-character-values" and
  ruleId = "M5-0-11"
  or
  query =
    // `Query` instance for the `signedCharAndUnsignedCharTypeShallOnlyBeUsedForTheStorageAndUseOfNumericValues` query
    StringsPackage::signedCharAndUnsignedCharTypeShallOnlyBeUsedForTheStorageAndUseOfNumericValuesQuery() and
  queryId =
    // `@id` for the `signedCharAndUnsignedCharTypeShallOnlyBeUsedForTheStorageAndUseOfNumericValues` query
    "cpp/autosar/signed-char-and-unsigned-char-type-shall-only-be-used-for-the-storage-and-use-of-numeric-values" and
  ruleId = "M5-0-12"
  or
  query =
    // `Query` instance for the `basicStringMayNotBeNullTerminatedCert` query
    StringsPackage::basicStringMayNotBeNullTerminatedCertQuery() and
  queryId =
    // `@id` for the `basicStringMayNotBeNullTerminatedCert` query
    "cpp/cert/basic-string-may-not-be-null-terminated-cert" and
  ruleId = "STR50-CPP"
  or
  query =
    // `Query` instance for the `operationMayNotNullTerminateCStyleStringCert` query
    StringsPackage::operationMayNotNullTerminateCStyleStringCertQuery() and
  queryId =
    // `@id` for the `operationMayNotNullTerminateCStyleStringCert` query
    "cpp/cert/operation-may-not-null-terminate-c-style-string-cert" and
  ruleId = "STR50-CPP"
}

module StringsPackage {
  Query stringLiteralsAssignedToNonConstantPointersQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `stringLiteralsAssignedToNonConstantPointers` query
      TStringsPackageQuery(TStringLiteralsAssignedToNonConstantPointersQuery())
  }

  Query basicStringMayNotBeNullTerminatedAutosarQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `basicStringMayNotBeNullTerminatedAutosar` query
      TStringsPackageQuery(TBasicStringMayNotBeNullTerminatedAutosarQuery())
  }

  Query operationMayNotNullTerminateCStyleStringAutosarQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `operationMayNotNullTerminateCStyleStringAutosar` query
      TStringsPackageQuery(TOperationMayNotNullTerminateCStyleStringAutosarQuery())
  }

  Query cStyleStringsUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `cStyleStringsUsed` query
      TStringsPackageQuery(TCStyleStringsUsedQuery())
  }

  Query plainCharTypeShallOnlyBeUsedForTheStorageAndUseOfCharacterValuesQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `plainCharTypeShallOnlyBeUsedForTheStorageAndUseOfCharacterValues` query
      TStringsPackageQuery(TPlainCharTypeShallOnlyBeUsedForTheStorageAndUseOfCharacterValuesQuery())
  }

  Query signedCharAndUnsignedCharTypeShallOnlyBeUsedForTheStorageAndUseOfNumericValuesQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `signedCharAndUnsignedCharTypeShallOnlyBeUsedForTheStorageAndUseOfNumericValues` query
      TStringsPackageQuery(TSignedCharAndUnsignedCharTypeShallOnlyBeUsedForTheStorageAndUseOfNumericValuesQuery())
  }

  Query basicStringMayNotBeNullTerminatedCertQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `basicStringMayNotBeNullTerminatedCert` query
      TStringsPackageQuery(TBasicStringMayNotBeNullTerminatedCertQuery())
  }

  Query operationMayNotNullTerminateCStyleStringCertQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `operationMayNotNullTerminateCStyleStringCert` query
      TStringsPackageQuery(TOperationMayNotNullTerminateCStyleStringCertQuery())
  }
}
