//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype BitfieldTypesQuery =
  TBitFieldsShallOnlyBeDeclaredWithAnAppropriateTypeQuery() or
  TSingleBitNamedBitFieldsOfASignedTypeQuery()

predicate isBitfieldTypesQueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `bitFieldsShallOnlyBeDeclaredWithAnAppropriateType` query
    BitfieldTypesPackage::bitFieldsShallOnlyBeDeclaredWithAnAppropriateTypeQuery() and
  queryId =
    // `@id` for the `bitFieldsShallOnlyBeDeclaredWithAnAppropriateType` query
    "c/misra/bit-fields-shall-only-be-declared-with-an-appropriate-type" and
  ruleId = "RULE-6-1" and
  category = "required"
  or
  query =
    // `Query` instance for the `singleBitNamedBitFieldsOfASignedType` query
    BitfieldTypesPackage::singleBitNamedBitFieldsOfASignedTypeQuery() and
  queryId =
    // `@id` for the `singleBitNamedBitFieldsOfASignedType` query
    "c/misra/single-bit-named-bit-fields-of-a-signed-type" and
  ruleId = "RULE-6-2" and
  category = "required"
}

module BitfieldTypesPackage {
  Query bitFieldsShallOnlyBeDeclaredWithAnAppropriateTypeQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `bitFieldsShallOnlyBeDeclaredWithAnAppropriateType` query
      TQueryC(TBitfieldTypesPackageQuery(TBitFieldsShallOnlyBeDeclaredWithAnAppropriateTypeQuery()))
  }

  Query singleBitNamedBitFieldsOfASignedTypeQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `singleBitNamedBitFieldsOfASignedType` query
      TQueryC(TBitfieldTypesPackageQuery(TSingleBitNamedBitFieldsOfASignedTypeQuery()))
  }
}
