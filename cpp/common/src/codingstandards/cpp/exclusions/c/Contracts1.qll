//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype Contracts1Query =
  TDoNotModifyTheReturnValueOfCertainFunctionsQuery() or
  TEnvPointerIsInvalidAfterCertainOperationsQuery()

predicate isContracts1QueryMetadata(Query query, string queryId, string ruleId) {
  query =
    // `Query` instance for the `doNotModifyTheReturnValueOfCertainFunctions` query
    Contracts1Package::doNotModifyTheReturnValueOfCertainFunctionsQuery() and
  queryId =
    // `@id` for the `doNotModifyTheReturnValueOfCertainFunctions` query
    "c/cert/do-not-modify-the-return-value-of-certain-functions" and
  ruleId = "ENV30-C"
  or
  query =
    // `Query` instance for the `envPointerIsInvalidAfterCertainOperations` query
    Contracts1Package::envPointerIsInvalidAfterCertainOperationsQuery() and
  queryId =
    // `@id` for the `envPointerIsInvalidAfterCertainOperations` query
    "c/cert/env-pointer-is-invalid-after-certain-operations" and
  ruleId = "ENV31-C"
}

module Contracts1Package {
  Query doNotModifyTheReturnValueOfCertainFunctionsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `doNotModifyTheReturnValueOfCertainFunctions` query
      TQueryC(TContracts1PackageQuery(TDoNotModifyTheReturnValueOfCertainFunctionsQuery()))
  }

  Query envPointerIsInvalidAfterCertainOperationsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `envPointerIsInvalidAfterCertainOperations` query
      TQueryC(TContracts1PackageQuery(TEnvPointerIsInvalidAfterCertainOperationsQuery()))
  }
}
