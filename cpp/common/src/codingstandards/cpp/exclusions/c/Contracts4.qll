//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype Contracts4Query =
  TErrnoReadBeforeReturnQuery() or
  TFunctionCallBeforeErrnoCheckQuery() or
  TErrnoNotSetToZeroQuery() or
  TDoNotRelyOnIndeterminateValuesOfErrnoQuery() or
  TDetectAndHandleStandardLibraryErrorsQuery()

predicate isContracts4QueryMetadata(Query query, string queryId, string ruleId) {
  query =
    // `Query` instance for the `errnoReadBeforeReturn` query
    Contracts4Package::errnoReadBeforeReturnQuery() and
  queryId =
    // `@id` for the `errnoReadBeforeReturn` query
    "c/cert/errno-read-before-return" and
  ruleId = "ERR30-C"
  or
  query =
    // `Query` instance for the `functionCallBeforeErrnoCheck` query
    Contracts4Package::functionCallBeforeErrnoCheckQuery() and
  queryId =
    // `@id` for the `functionCallBeforeErrnoCheck` query
    "c/cert/function-call-before-errno-check" and
  ruleId = "ERR30-C"
  or
  query =
    // `Query` instance for the `errnoNotSetToZero` query
    Contracts4Package::errnoNotSetToZeroQuery() and
  queryId =
    // `@id` for the `errnoNotSetToZero` query
    "c/cert/errno-not-set-to-zero" and
  ruleId = "ERR30-C"
  or
  query =
    // `Query` instance for the `doNotRelyOnIndeterminateValuesOfErrno` query
    Contracts4Package::doNotRelyOnIndeterminateValuesOfErrnoQuery() and
  queryId =
    // `@id` for the `doNotRelyOnIndeterminateValuesOfErrno` query
    "c/cert/do-not-rely-on-indeterminate-values-of-errno" and
  ruleId = "ERR32-C"
  or
  query =
    // `Query` instance for the `detectAndHandleStandardLibraryErrors` query
    Contracts4Package::detectAndHandleStandardLibraryErrorsQuery() and
  queryId =
    // `@id` for the `detectAndHandleStandardLibraryErrors` query
    "c/cert/detect-and-handle-standard-library-errors" and
  ruleId = "ERR33-C"
}

module Contracts4Package {
  Query errnoReadBeforeReturnQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `errnoReadBeforeReturn` query
      TQueryC(TContracts4PackageQuery(TErrnoReadBeforeReturnQuery()))
  }

  Query functionCallBeforeErrnoCheckQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `functionCallBeforeErrnoCheck` query
      TQueryC(TContracts4PackageQuery(TFunctionCallBeforeErrnoCheckQuery()))
  }

  Query errnoNotSetToZeroQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `errnoNotSetToZero` query
      TQueryC(TContracts4PackageQuery(TErrnoNotSetToZeroQuery()))
  }

  Query doNotRelyOnIndeterminateValuesOfErrnoQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `doNotRelyOnIndeterminateValuesOfErrno` query
      TQueryC(TContracts4PackageQuery(TDoNotRelyOnIndeterminateValuesOfErrnoQuery()))
  }

  Query detectAndHandleStandardLibraryErrorsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `detectAndHandleStandardLibraryErrors` query
      TQueryC(TContracts4PackageQuery(TDetectAndHandleStandardLibraryErrorsQuery()))
  }
}
