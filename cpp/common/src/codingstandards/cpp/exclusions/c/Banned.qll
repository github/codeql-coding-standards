//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype BannedQuery =
  TDoNotCallSystemQuery() or
  TCommaOperatorShouldNotBeUsedQuery() or
  TFeaturesOfStdarghUsedQuery() or
  TUnionKeywordShouldNotBeUsedQuery() or
  TStandardLibraryTimeAndDateFunctionsUsedQuery() or
  TStandardHeaderFileTgmathhUsedQuery() or
  TExceptionHandlingFeaturesOfFenvhUsedQuery() or
  TSystemOfStdlibhUsedQuery() or
  TMemoryAllocDeallocFunctionsOfStdlibhUsedQuery() or
  TStandardHeaderFileUsedSetjmphQuery() or
  TStandardHeaderFileUsedSignalhQuery() or
  TStandardLibraryInputoutputFunctionsUsedQuery() or
  TAtofAtoiAtolAndAtollOfStdlibhUsedQuery() or
  TTerminationFunctionsOfStdlibhUsedQuery() or
  TTerminationMacrosOfStdlibhUsedQuery() or
  TBsearchAndQsortOfStdlibhUsedQuery() or
  TStdLibDynamicMemoryAllocationUsedQuery() or
  TOctalConstantsUsedQuery() or
  TRestrictTypeQualifierUsedQuery()

predicate isBannedQueryMetadata(Query query, string queryId, string ruleId) {
  query =
    // `Query` instance for the `doNotCallSystem` query
    BannedPackage::doNotCallSystemQuery() and
  queryId =
    // `@id` for the `doNotCallSystem` query
    "c/cert/do-not-call-system" and
  ruleId = "ENV33-C"
  or
  query =
    // `Query` instance for the `commaOperatorShouldNotBeUsed` query
    BannedPackage::commaOperatorShouldNotBeUsedQuery() and
  queryId =
    // `@id` for the `commaOperatorShouldNotBeUsed` query
    "c/misra/comma-operator-should-not-be-used" and
  ruleId = "RULE-12-3"
  or
  query =
    // `Query` instance for the `featuresOfStdarghUsed` query
    BannedPackage::featuresOfStdarghUsedQuery() and
  queryId =
    // `@id` for the `featuresOfStdarghUsed` query
    "c/misra/features-of-stdargh-used" and
  ruleId = "RULE-17-1"
  or
  query =
    // `Query` instance for the `unionKeywordShouldNotBeUsed` query
    BannedPackage::unionKeywordShouldNotBeUsedQuery() and
  queryId =
    // `@id` for the `unionKeywordShouldNotBeUsed` query
    "c/misra/union-keyword-should-not-be-used" and
  ruleId = "RULE-19-2"
  or
  query =
    // `Query` instance for the `standardLibraryTimeAndDateFunctionsUsed` query
    BannedPackage::standardLibraryTimeAndDateFunctionsUsedQuery() and
  queryId =
    // `@id` for the `standardLibraryTimeAndDateFunctionsUsed` query
    "c/misra/standard-library-time-and-date-functions-used" and
  ruleId = "RULE-21-10"
  or
  query =
    // `Query` instance for the `standardHeaderFileTgmathhUsed` query
    BannedPackage::standardHeaderFileTgmathhUsedQuery() and
  queryId =
    // `@id` for the `standardHeaderFileTgmathhUsed` query
    "c/misra/standard-header-file-tgmathh-used" and
  ruleId = "RULE-21-11"
  or
  query =
    // `Query` instance for the `exceptionHandlingFeaturesOfFenvhUsed` query
    BannedPackage::exceptionHandlingFeaturesOfFenvhUsedQuery() and
  queryId =
    // `@id` for the `exceptionHandlingFeaturesOfFenvhUsed` query
    "c/misra/exception-handling-features-of-fenvh-used" and
  ruleId = "RULE-21-12"
  or
  query =
    // `Query` instance for the `systemOfStdlibhUsed` query
    BannedPackage::systemOfStdlibhUsedQuery() and
  queryId =
    // `@id` for the `systemOfStdlibhUsed` query
    "c/misra/system-of-stdlibh-used" and
  ruleId = "RULE-21-21"
  or
  query =
    // `Query` instance for the `memoryAllocDeallocFunctionsOfStdlibhUsed` query
    BannedPackage::memoryAllocDeallocFunctionsOfStdlibhUsedQuery() and
  queryId =
    // `@id` for the `memoryAllocDeallocFunctionsOfStdlibhUsed` query
    "c/misra/memory-alloc-dealloc-functions-of-stdlibh-used" and
  ruleId = "RULE-21-3"
  or
  query =
    // `Query` instance for the `standardHeaderFileUsedSetjmph` query
    BannedPackage::standardHeaderFileUsedSetjmphQuery() and
  queryId =
    // `@id` for the `standardHeaderFileUsedSetjmph` query
    "c/misra/standard-header-file-used-setjmph" and
  ruleId = "RULE-21-4"
  or
  query =
    // `Query` instance for the `standardHeaderFileUsedSignalh` query
    BannedPackage::standardHeaderFileUsedSignalhQuery() and
  queryId =
    // `@id` for the `standardHeaderFileUsedSignalh` query
    "c/misra/standard-header-file-used-signalh" and
  ruleId = "RULE-21-5"
  or
  query =
    // `Query` instance for the `standardLibraryInputoutputFunctionsUsed` query
    BannedPackage::standardLibraryInputoutputFunctionsUsedQuery() and
  queryId =
    // `@id` for the `standardLibraryInputoutputFunctionsUsed` query
    "c/misra/standard-library-inputoutput-functions-used" and
  ruleId = "RULE-21-6"
  or
  query =
    // `Query` instance for the `atofAtoiAtolAndAtollOfStdlibhUsed` query
    BannedPackage::atofAtoiAtolAndAtollOfStdlibhUsedQuery() and
  queryId =
    // `@id` for the `atofAtoiAtolAndAtollOfStdlibhUsed` query
    "c/misra/atof-atoi-atol-and-atoll-of-stdlibh-used" and
  ruleId = "RULE-21-7"
  or
  query =
    // `Query` instance for the `terminationFunctionsOfStdlibhUsed` query
    BannedPackage::terminationFunctionsOfStdlibhUsedQuery() and
  queryId =
    // `@id` for the `terminationFunctionsOfStdlibhUsed` query
    "c/misra/termination-functions-of-stdlibh-used" and
  ruleId = "RULE-21-8"
  or
  query =
    // `Query` instance for the `terminationMacrosOfStdlibhUsed` query
    BannedPackage::terminationMacrosOfStdlibhUsedQuery() and
  queryId =
    // `@id` for the `terminationMacrosOfStdlibhUsed` query
    "c/misra/termination-macros-of-stdlibh-used" and
  ruleId = "RULE-21-8"
  or
  query =
    // `Query` instance for the `bsearchAndQsortOfStdlibhUsed` query
    BannedPackage::bsearchAndQsortOfStdlibhUsedQuery() and
  queryId =
    // `@id` for the `bsearchAndQsortOfStdlibhUsed` query
    "c/misra/bsearch-and-qsort-of-stdlibh-used" and
  ruleId = "RULE-21-9"
  or
  query =
    // `Query` instance for the `stdLibDynamicMemoryAllocationUsed` query
    BannedPackage::stdLibDynamicMemoryAllocationUsedQuery() and
  queryId =
    // `@id` for the `stdLibDynamicMemoryAllocationUsed` query
    "c/misra/std-lib-dynamic-memory-allocation-used" and
  ruleId = "RULE-4-12"
  or
  query =
    // `Query` instance for the `octalConstantsUsed` query
    BannedPackage::octalConstantsUsedQuery() and
  queryId =
    // `@id` for the `octalConstantsUsed` query
    "c/misra/octal-constants-used" and
  ruleId = "RULE-7-1"
  or
  query =
    // `Query` instance for the `restrictTypeQualifierUsed` query
    BannedPackage::restrictTypeQualifierUsedQuery() and
  queryId =
    // `@id` for the `restrictTypeQualifierUsed` query
    "c/misra/restrict-type-qualifier-used" and
  ruleId = "RULE-8-14"
}

module BannedPackage {
  Query doNotCallSystemQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `doNotCallSystem` query
      TQueryC(TBannedPackageQuery(TDoNotCallSystemQuery()))
  }

  Query commaOperatorShouldNotBeUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `commaOperatorShouldNotBeUsed` query
      TQueryC(TBannedPackageQuery(TCommaOperatorShouldNotBeUsedQuery()))
  }

  Query featuresOfStdarghUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `featuresOfStdarghUsed` query
      TQueryC(TBannedPackageQuery(TFeaturesOfStdarghUsedQuery()))
  }

  Query unionKeywordShouldNotBeUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `unionKeywordShouldNotBeUsed` query
      TQueryC(TBannedPackageQuery(TUnionKeywordShouldNotBeUsedQuery()))
  }

  Query standardLibraryTimeAndDateFunctionsUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `standardLibraryTimeAndDateFunctionsUsed` query
      TQueryC(TBannedPackageQuery(TStandardLibraryTimeAndDateFunctionsUsedQuery()))
  }

  Query standardHeaderFileTgmathhUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `standardHeaderFileTgmathhUsed` query
      TQueryC(TBannedPackageQuery(TStandardHeaderFileTgmathhUsedQuery()))
  }

  Query exceptionHandlingFeaturesOfFenvhUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `exceptionHandlingFeaturesOfFenvhUsed` query
      TQueryC(TBannedPackageQuery(TExceptionHandlingFeaturesOfFenvhUsedQuery()))
  }

  Query systemOfStdlibhUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `systemOfStdlibhUsed` query
      TQueryC(TBannedPackageQuery(TSystemOfStdlibhUsedQuery()))
  }

  Query memoryAllocDeallocFunctionsOfStdlibhUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `memoryAllocDeallocFunctionsOfStdlibhUsed` query
      TQueryC(TBannedPackageQuery(TMemoryAllocDeallocFunctionsOfStdlibhUsedQuery()))
  }

  Query standardHeaderFileUsedSetjmphQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `standardHeaderFileUsedSetjmph` query
      TQueryC(TBannedPackageQuery(TStandardHeaderFileUsedSetjmphQuery()))
  }

  Query standardHeaderFileUsedSignalhQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `standardHeaderFileUsedSignalh` query
      TQueryC(TBannedPackageQuery(TStandardHeaderFileUsedSignalhQuery()))
  }

  Query standardLibraryInputoutputFunctionsUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `standardLibraryInputoutputFunctionsUsed` query
      TQueryC(TBannedPackageQuery(TStandardLibraryInputoutputFunctionsUsedQuery()))
  }

  Query atofAtoiAtolAndAtollOfStdlibhUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `atofAtoiAtolAndAtollOfStdlibhUsed` query
      TQueryC(TBannedPackageQuery(TAtofAtoiAtolAndAtollOfStdlibhUsedQuery()))
  }

  Query terminationFunctionsOfStdlibhUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `terminationFunctionsOfStdlibhUsed` query
      TQueryC(TBannedPackageQuery(TTerminationFunctionsOfStdlibhUsedQuery()))
  }

  Query terminationMacrosOfStdlibhUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `terminationMacrosOfStdlibhUsed` query
      TQueryC(TBannedPackageQuery(TTerminationMacrosOfStdlibhUsedQuery()))
  }

  Query bsearchAndQsortOfStdlibhUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `bsearchAndQsortOfStdlibhUsed` query
      TQueryC(TBannedPackageQuery(TBsearchAndQsortOfStdlibhUsedQuery()))
  }

  Query stdLibDynamicMemoryAllocationUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `stdLibDynamicMemoryAllocationUsed` query
      TQueryC(TBannedPackageQuery(TStdLibDynamicMemoryAllocationUsedQuery()))
  }

  Query octalConstantsUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `octalConstantsUsed` query
      TQueryC(TBannedPackageQuery(TOctalConstantsUsedQuery()))
  }

  Query restrictTypeQualifierUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `restrictTypeQualifierUsed` query
      TQueryC(TBannedPackageQuery(TRestrictTypeQualifierUsedQuery()))
  }
}
