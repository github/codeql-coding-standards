//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype DeadCodeQuery =
  TUnreachableCodeQuery() or
  TDeadCodeQuery() or
  TUnusedTypeDeclarationsQuery() or
  TUnusedTagDeclarationQuery() or
  TUnusedMacroDeclarationQuery() or
  TUnusedLabelDeclarationQuery() or
  TUnusedParameterQuery()

predicate isDeadCodeQueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `unreachableCode` query
    DeadCodePackage::unreachableCodeQuery() and
  queryId =
    // `@id` for the `unreachableCode` query
    "c/misra/unreachable-code" and
  ruleId = "RULE-2-1" and
  category = "required"
  or
  query =
    // `Query` instance for the `deadCode` query
    DeadCodePackage::deadCodeQuery() and
  queryId =
    // `@id` for the `deadCode` query
    "c/misra/dead-code" and
  ruleId = "RULE-2-2" and
  category = "required"
  or
  query =
    // `Query` instance for the `unusedTypeDeclarations` query
    DeadCodePackage::unusedTypeDeclarationsQuery() and
  queryId =
    // `@id` for the `unusedTypeDeclarations` query
    "c/misra/unused-type-declarations" and
  ruleId = "RULE-2-3" and
  category = "advisory"
  or
  query =
    // `Query` instance for the `unusedTagDeclaration` query
    DeadCodePackage::unusedTagDeclarationQuery() and
  queryId =
    // `@id` for the `unusedTagDeclaration` query
    "c/misra/unused-tag-declaration" and
  ruleId = "RULE-2-4" and
  category = "advisory"
  or
  query =
    // `Query` instance for the `unusedMacroDeclaration` query
    DeadCodePackage::unusedMacroDeclarationQuery() and
  queryId =
    // `@id` for the `unusedMacroDeclaration` query
    "c/misra/unused-macro-declaration" and
  ruleId = "RULE-2-5" and
  category = "advisory"
  or
  query =
    // `Query` instance for the `unusedLabelDeclaration` query
    DeadCodePackage::unusedLabelDeclarationQuery() and
  queryId =
    // `@id` for the `unusedLabelDeclaration` query
    "c/misra/unused-label-declaration" and
  ruleId = "RULE-2-6" and
  category = "advisory"
  or
  query =
    // `Query` instance for the `unusedParameter` query
    DeadCodePackage::unusedParameterQuery() and
  queryId =
    // `@id` for the `unusedParameter` query
    "c/misra/unused-parameter" and
  ruleId = "RULE-2-7" and
  category = "advisory"
}

module DeadCodePackage {
  Query unreachableCodeQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `unreachableCode` query
      TQueryC(TDeadCodePackageQuery(TUnreachableCodeQuery()))
  }

  Query deadCodeQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `deadCode` query
      TQueryC(TDeadCodePackageQuery(TDeadCodeQuery()))
  }

  Query unusedTypeDeclarationsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `unusedTypeDeclarations` query
      TQueryC(TDeadCodePackageQuery(TUnusedTypeDeclarationsQuery()))
  }

  Query unusedTagDeclarationQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `unusedTagDeclaration` query
      TQueryC(TDeadCodePackageQuery(TUnusedTagDeclarationQuery()))
  }

  Query unusedMacroDeclarationQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `unusedMacroDeclaration` query
      TQueryC(TDeadCodePackageQuery(TUnusedMacroDeclarationQuery()))
  }

  Query unusedLabelDeclarationQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `unusedLabelDeclaration` query
      TQueryC(TDeadCodePackageQuery(TUnusedLabelDeclarationQuery()))
  }

  Query unusedParameterQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `unusedParameter` query
      TQueryC(TDeadCodePackageQuery(TUnusedParameterQuery()))
  }
}
