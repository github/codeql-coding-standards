//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype IO1Query =
  TExcludeUserInputFromFormatStringsQuery() or
  TDistinguishBetweenCharReadFromAFileAndEofOrWeofQuery() or
  TEndOfFileCheckPortabilityQuery() or
  TDoNotAlternatelyIOFromAStreamWithoutPositioningQuery() or
  TCloseFilesWhenTheyAreNoLongerNeededQuery() or
  TUndefinedBehaviorAccessingAClosedFileQuery() or
  TFileUsedAfterClosedQuery()

predicate isIO1QueryMetadata(Query query, string queryId, string ruleId) {
  query =
    // `Query` instance for the `excludeUserInputFromFormatStrings` query
    IO1Package::excludeUserInputFromFormatStringsQuery() and
  queryId =
    // `@id` for the `excludeUserInputFromFormatStrings` query
    "c/cert/exclude-user-input-from-format-strings" and
  ruleId = "FIO30-C"
  or
  query =
    // `Query` instance for the `distinguishBetweenCharReadFromAFileAndEofOrWeof` query
    IO1Package::distinguishBetweenCharReadFromAFileAndEofOrWeofQuery() and
  queryId =
    // `@id` for the `distinguishBetweenCharReadFromAFileAndEofOrWeof` query
    "c/cert/distinguish-between-char-read-from-a-file-and-eof-or-weof" and
  ruleId = "FIO34-C"
  or
  query =
    // `Query` instance for the `endOfFileCheckPortability` query
    IO1Package::endOfFileCheckPortabilityQuery() and
  queryId =
    // `@id` for the `endOfFileCheckPortability` query
    "c/cert/end-of-file-check-portability" and
  ruleId = "FIO34-C"
  or
  query =
    // `Query` instance for the `doNotAlternatelyIOFromAStreamWithoutPositioning` query
    IO1Package::doNotAlternatelyIOFromAStreamWithoutPositioningQuery() and
  queryId =
    // `@id` for the `doNotAlternatelyIOFromAStreamWithoutPositioning` query
    "c/cert/do-not-alternately-io-from-a-stream-without-positioning" and
  ruleId = "FIO39-C"
  or
  query =
    // `Query` instance for the `closeFilesWhenTheyAreNoLongerNeeded` query
    IO1Package::closeFilesWhenTheyAreNoLongerNeededQuery() and
  queryId =
    // `@id` for the `closeFilesWhenTheyAreNoLongerNeeded` query
    "c/cert/close-files-when-they-are-no-longer-needed" and
  ruleId = "FIO42-C"
  or
  query =
    // `Query` instance for the `undefinedBehaviorAccessingAClosedFile` query
    IO1Package::undefinedBehaviorAccessingAClosedFileQuery() and
  queryId =
    // `@id` for the `undefinedBehaviorAccessingAClosedFile` query
    "c/cert/undefined-behavior-accessing-a-closed-file" and
  ruleId = "FIO46-C"
  or
  query =
    // `Query` instance for the `fileUsedAfterClosed` query
    IO1Package::fileUsedAfterClosedQuery() and
  queryId =
    // `@id` for the `fileUsedAfterClosed` query
    "c/misra/file-used-after-closed" and
  ruleId = "RULE-22-6"
}

module IO1Package {
  Query excludeUserInputFromFormatStringsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `excludeUserInputFromFormatStrings` query
      TQueryC(TIO1PackageQuery(TExcludeUserInputFromFormatStringsQuery()))
  }

  Query distinguishBetweenCharReadFromAFileAndEofOrWeofQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `distinguishBetweenCharReadFromAFileAndEofOrWeof` query
      TQueryC(TIO1PackageQuery(TDistinguishBetweenCharReadFromAFileAndEofOrWeofQuery()))
  }

  Query endOfFileCheckPortabilityQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `endOfFileCheckPortability` query
      TQueryC(TIO1PackageQuery(TEndOfFileCheckPortabilityQuery()))
  }

  Query doNotAlternatelyIOFromAStreamWithoutPositioningQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `doNotAlternatelyIOFromAStreamWithoutPositioning` query
      TQueryC(TIO1PackageQuery(TDoNotAlternatelyIOFromAStreamWithoutPositioningQuery()))
  }

  Query closeFilesWhenTheyAreNoLongerNeededQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `closeFilesWhenTheyAreNoLongerNeeded` query
      TQueryC(TIO1PackageQuery(TCloseFilesWhenTheyAreNoLongerNeededQuery()))
  }

  Query undefinedBehaviorAccessingAClosedFileQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `undefinedBehaviorAccessingAClosedFile` query
      TQueryC(TIO1PackageQuery(TUndefinedBehaviorAccessingAClosedFileQuery()))
  }

  Query fileUsedAfterClosedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `fileUsedAfterClosed` query
      TQueryC(TIO1PackageQuery(TFileUsedAfterClosedQuery()))
  }
}
