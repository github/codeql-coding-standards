//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype Contracts3Query =
  TOnlyTestErrnoRightAfterErrnoSettingFunctionQuery() or
  TErrnoSetToZeroPriorToCallQuery() or
  TErrnoSetToZeroAfterCallQuery()

predicate isContracts3QueryMetadata(Query query, string queryId, string ruleId) {
  query =
    // `Query` instance for the `onlyTestErrnoRightAfterErrnoSettingFunction` query
    Contracts3Package::onlyTestErrnoRightAfterErrnoSettingFunctionQuery() and
  queryId =
    // `@id` for the `onlyTestErrnoRightAfterErrnoSettingFunction` query
    "c/misra/only-test-errno-right-after-errno-setting-function" and
  ruleId = "RULE-22-10"
  or
  query =
    // `Query` instance for the `errnoSetToZeroPriorToCall` query
    Contracts3Package::errnoSetToZeroPriorToCallQuery() and
  queryId =
    // `@id` for the `errnoSetToZeroPriorToCall` query
    "c/misra/errno-set-to-zero-prior-to-call" and
  ruleId = "RULE-22-8"
  or
  query =
    // `Query` instance for the `errnoSetToZeroAfterCall` query
    Contracts3Package::errnoSetToZeroAfterCallQuery() and
  queryId =
    // `@id` for the `errnoSetToZeroAfterCall` query
    "c/misra/errno-set-to-zero-after-call" and
  ruleId = "RULE-22-9"
}

module Contracts3Package {
  Query onlyTestErrnoRightAfterErrnoSettingFunctionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `onlyTestErrnoRightAfterErrnoSettingFunction` query
      TQueryC(TContracts3PackageQuery(TOnlyTestErrnoRightAfterErrnoSettingFunctionQuery()))
  }

  Query errnoSetToZeroPriorToCallQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `errnoSetToZeroPriorToCall` query
      TQueryC(TContracts3PackageQuery(TErrnoSetToZeroPriorToCallQuery()))
  }

  Query errnoSetToZeroAfterCallQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `errnoSetToZeroAfterCall` query
      TQueryC(TContracts3PackageQuery(TErrnoSetToZeroAfterCallQuery()))
  }
}
